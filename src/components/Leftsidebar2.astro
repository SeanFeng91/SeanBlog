---
const allPosts = await Astro.glob('../pages/**/*.{md,mdx}');
import BlogPost from '../components/BlogPost.astro';

const categories = {
  Tools: allPosts.filter(file => file.url.includes('/Tools/')),
  travels: allPosts.filter(file => file.url.includes('/travels/')),
  Posts: allPosts.filter(file => file.url.includes('/posts/')),
  Blogs: allPosts.filter(file => file.url.includes('/blogs/')),
  thoughts: allPosts.filter(file => file.url.includes('/thoughts/')),
};

// 对每个类别的文章进行排序
for (const category in categories) {
  categories[category].sort((a, b) => {
    const dateA = new Date(a.frontmatter.pubDate || 0);
    const dateB = new Date(b.frontmatter.pubDate || 0);
    return dateB.getTime() - dateA.getTime();
  });
}

const categoryIcons = {
  Tools: '<svg class="inline-block size-6" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path fill="currentColor" d="m15.224 15.508l-2.213 4.65a.6.6 0 0 1-.977.155l-3.542-3.739a.6.6 0 0 0-.358-.182l-5.106-.668a.6.6 0 0 1-.45-.881l2.462-4.524a.6.6 0 0 0 .063-.396L4.16 4.86a.6.6 0 0 1 .7-.7l5.062.943a.6.6 0 0 0 .397-.063l4.523-2.46a.6.6 0 0 1 .882.448l.668 5.107a.6.6 0 0 0 .182.357l3.739 3.542a.6.6 0 0 1-.155.977l-4.65 2.213a.6.6 0 0 0-.284.284m.797 1.927l1.414-1.414l4.243 4.242l-1.415 1.415z" /></svg>',
  Posts: '<svg class="inline-block" xmlns="http://www.w3.org/2000/svg" width="1em" height="1em" viewBox="0 0 16 16"><path fill="currentColor" d="M.946 0L2.23 14.4L7.992 16l5.777-1.602L15.055 0zM12.26 4.71H5.502l.161 1.809H12.1l-.485 5.422l-3.623 1.004l-3.618-1.004l-.247-2.774H5.9l.126 1.41l1.967.53l.004-.001l1.968-.531l.204-2.29H4.048l-.476-5.341h8.847l-.158 1.766z" /></svg>',
  Blogs: '<svg class="inline-block size-8" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path fill="currentColor" d="M21 11V9h-2V7a2.006 2.006 0 0 0-2-2h-2V3h-2v2h-2V3H9v2H7a2.006 2.006 0 0 0-2 2v2H3v2h2v2H3v2h2v2a2.006 2.006 0 0 0 2 2h2v2h2v-2h2v2h2v-2h2a2.006 2.006 0 0 0 2-2v-2h2v-2h-2v-2Zm-4 6H7V7h10Z" /><path fill="currentColor" d="M11.361 8h-1.345l-2.01 8h1.027l.464-1.875h2.316L12.265 16h1.062Zm-1.729 5.324L10.65 8.95h.046l.983 4.374ZM14.244 8h1v8h-1z" /></svg>',
  thoughts: '<svg xmlns="http://www.w3.org/2000/svg" width="1em" height="1em" viewBox="-0.5 -0.5 24 24"><path fill="currentColor" d="m21.289.98l.59.59c.813.814.69 2.257-.277 3.223L9.435 16.96l-3.942 1.442c-.495.182-.977-.054-1.075-.525a.93.93 0 0 1 .045-.51l1.47-3.976L18.066 1.257c.967-.966 2.41-1.09 3.223-.276zM8.904 2.19a1 1 0 1 1 0 2h-4a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2v-4a1 1 0 0 1 2 0v4a4 4 0 0 1-4 4h-12a4 4 0 0 1-4-4v-12a4 4 0 0 1 4-4z" /></svg>',
  travel:'<svg xmlns="http://www.w3.org/2000/svg" width="1.2em" height="1.2em" viewBox="0 0 24 24"><path fill="currentColor" d="M12 21q-1.864 0-3.506-.71q-1.642-.711-2.857-1.926q-1.216-1.216-1.926-2.858Q3 13.864 3 12t.71-3.506t1.927-2.857T8.494 3.71Q10.137 3 12 3q3.496 0 6.032 2.307t2.903 5.699h-1.012q-.263-2.171-1.568-3.897T15 4.562V5q0 .825-.587 1.413T13 7h-2v2q0 .425-.288.713T10 10H8v2h1.846v3H9l-4.8-4.8q-.075.45-.137.9T4 12q0 3.275 2.3 5.625T12 20zm9.023-.27l-3.45-3.41q-.448.319-.971.5q-.523.18-1.102.18q-1.471 0-2.485-1.014Q12 15.97 12 14.5t1.015-2.485T15.5 11t2.486 1.015T19 14.5q0 .598-.19 1.13q-.19.533-.53.981l3.45 3.412zM15.5 17q1.05 0 1.775-.725T18 14.5t-.725-1.775T15.5 12t-1.775.725T13 14.5t.725 1.775T15.5 17" /></svg>'

};

const categoryTitles = {
  Tools: "工具类",
  Posts: "网页开发类",
  Blogs: "大模型类",
  thoughts:"摘录感悟",
  travels:"旅行类",

};
---

<div class="hs-overlay hs-overlay-open:translate-x-0 -translate-x-full fixed top-0 start-0 transition-all duration-300 transform h-full max-w-xs w-full z-[50] bg-white border-e dark:bg-neutral-800 dark:border-neutral-700" id="hs-overlay-backdrop-with-scrolling" tabindex="-1">
  <div class="flex justify-between items-center py-3 px-4 border-b dark:border-neutral-700">
    <h3 class="font-bold text-gray-800 dark:text-white">博客目录</h3>
    <button type="button" class="flex justify-center items-center size-7 text-sm font-semibold rounded-full border border-spacing-1 text-gray-800 hover:bg-gray-100 disabled:opacity-50 disabled:pointer-events-none dark:text-white dark:hover:bg-neutral-700" data-hs-overlay="#hs-overlay-backdrop-with-scrolling">
      <span class="sr-only">关闭</span>
      <svg class="flex-shrink-0 size-4" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M18 6 6 18"></path><path d="m6 6 12 12"></path></svg>
    </button>
  </div>
  
  <div class="grid grid-cols-1 max-h-[80%] mt-4 p-4 hs-accordion-group overflow-y-auto" data-hs-accordion-always-open>
    {Object.entries(categories).map(([category, posts]) => (
      <div class="hs-accordion active" id={`hs-basic-always-open-heading-${category}`}>
        <button class="font-bold text-xl hs-accordion-toggle hs-accordion-active:text-blue-600 py-3 inline-flex items-center gap-x-3 w-full text-start text-gray-800 hover:text-gray-500 focus:outline-none focus:text-gray-500 rounded-lg disabled:opacity-50 disabled:pointer-events-none dark:hs-accordion-active:text-blue-500 dark:text-neutral-200 dark:hover:text-neutral-400 dark:focus:text-neutral-400" aria-expanded="true" aria-controls={`hs-basic-always-open-collapse-${category}`}>
          <svg class="hs-accordion-active:hidden block size-3.5" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M5 12h14"></path><path d="M12 5v14"></path></svg>
          <svg class="hs-accordion-active:block hidden size-3.5" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M5 12h14"></path></svg>
          <Fragment set:html={categoryIcons[category]} />
          {categoryTitles[category]}
        </button>
        <div id={`hs-basic-always-open-collapse-${category}`} class="hs-accordion-content w-full overflow-hidden transition-[height] duration-300" role="region" aria-labelledby={`hs-basic-always-open-heading-${category}`}>
          <ul class="space-y-4 border-l border-slate-100 dark:border-slate-800">
            {posts.map((post) => <BlogPost url={post.url} title={post.frontmatter.title} />)}
          </ul>
        </div>
      </div>
    ))}
  </div>
</div>

<script>
  // 获取当前页面的路径并去掉末尾的斜杠
  function getCurrentPagePath() {
    let pathname = window.location.pathname;
    return pathname.endsWith('/') ? pathname.slice(0, -1) : pathname;
  }

  // 获取链接的路径并去掉末尾的斜杠
  function getLinkPath(link) {
    let linkPath = new URL(link.getAttribute('href'), window.location.origin).pathname;
    return linkPath.endsWith('/') ? linkPath.slice(0, -1) : linkPath;
  }

  // 页面加载时检查当前 URL，设置激活状态
  window.addEventListener('DOMContentLoaded', () => {
    const currentPagePath = getCurrentPagePath();
    const menuLinks = document.querySelectorAll('.menu-link');

    menuLinks.forEach(link => {
      const linkPath = getLinkPath(link);
      if (currentPagePath === linkPath) {
        link.classList.add('active');
      } else {
        link.classList.remove('active');
      }
    });
  });
</script>
