---
const allPosts = await Astro.glob('../pages/**/*.{md,mdx}');
import Headingsofblog from "../components/Headingsofblog.astro";
// 获取所有 Markdown 文件


---

<div class="pl-3 mt-3 text-sm 
max-h-screen lg:mt-0 lg:px-6">
  <h2 class="text-2xl mb-1 font-bold text-secondary-900">
    <svg class="inline-block" ="http://www.w3.org/2000/svg" width="1em" height="1em" viewBox="0 0 48 48">
      <path fill="#673ab7" d="M38 44H12V4h26c2.2 0 4 1.8 4 4v32c0 2.2-1.8 4-4 4" />
      <path fill="#311b92" d="M10 4h2v40h-2c-2.2 0-4-1.8-4-4V8c0-2.2 1.8-4 4-4" />
      <path fill="#fff" d="M36 24.2c-.1 4.8-3.1 6.9-5.3 6.7c-.6-.1-2.1-.1-2.9-1.6c-.8 1-1.8 1.6-3.1 1.6c-2.6 0-3.3-2.5-3.4-3.1c-.1-.7-.2-1.4-.1-2.2c.1-1 1.1-6.5 5.7-6.5c2.2 0 3.5 1.1 3.7 1.3l-.6 6.8c0 .3-.2 1.6 1.1 1.6c2.1 0 2.4-3.9 2.4-4.6c.1-1.2.3-8.2-7-8.2c-6.9 0-7.9 7.4-8 9.2c-.5 8.5 6 8.5 7.2 8.5c1.7 0 3.7-.7 3.9-.8l.4 2c-.3.2-2 1.1-4.4 1.1c-2.2 0-10.1-.4-9.8-10.8c.3-2.1 1.6-11.2 10.8-11.2c9.2 0 9.4 8.1 9.4 10.2m-11.9 1.3c-.1 1 0 1.8.2 2.3c.2.5.6.8 1.2.8c.1 0 .3 0 .4-.1c.2-.1.3-.1.5-.3c.2-.1.3-.3.5-.6c.2-.2.3-.6.4-1l.5-5.4c-.2-.1-.5-.1-.7-.1c-.5 0-.9.1-1.2.3c-.3.2-.6.5-.9.8c-.2.4-.4.8-.6 1.3s-.2 1.3-.3 2" />
    </svg>
    目录导航</h2>
  <h2 class="text-sm font-light font-serif text-gray-800">Catalog of this blog</h2>
    <div class="mt-3 text-sm">
      <ul id="rightsidebar" class="space-y-2 leading-normal">
          <!-- 实现了右侧导航栏读取当前md的目录问题 -->
          {allPosts.map((post, index) => {
            let currentPath = Astro.url.pathname;
              if (currentPath.endsWith('index.html')) {
                currentPath = currentPath.slice(0, -'index.html'.length);
              }
              if (currentPath.endsWith('/')) {
                currentPath = currentPath.slice(0, -1);
              }
            if (post.url === currentPath){
              const headings = post.getHeadings();
            return headings.map((heading) => (
                
                  <Headingsofblog 
                url={`#${heading.slug}`} 
                getHeadings={heading.text}
                depth={heading.depth} />
                  ))
            };         
          })} 
    </ul>
    </div>
</div>



<script>
  document.querySelectorAll('a[href^="#"]').forEach(anchor => {
    anchor.addEventListener('click', function (e) {
      e.preventDefault();

      const targetId = this.getAttribute('href').substring(1); // 去掉#
      const targetElement = document.getElementById(targetId);
      if (!targetElement) {
        console.error(`Element with ID ${targetId} not found`);
        return;
      }
      const header = document.getElementById('fixed-header');
      const headerHeight = 200;
      const elementPosition = targetElement.getBoundingClientRect().top;
      const offsetPosition = elementPosition + window.scrollY - headerHeight;

      console.log(`Scrolling to ${targetId}`);  // 调试信息
      console.log(`Target element:`, targetElement);  // 调试信息

      window.scrollTo({
        top: offsetPosition,
        behavior: 'smooth'
      });
    });
  });


</script>

<style>
  .highlight {
    color: red; /* 高亮颜色 */
  }
</style>