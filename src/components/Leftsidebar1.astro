---
const allFiles = await Astro.glob('../pages/**/*.{md,mdx}');
import BlogPost from '../components/BlogPost.astro';

const categories = [
  { name: '工具类', icon: 'tool', files: allFiles.filter(file => file.url.includes('/Tools/')) },
  { name: '网页开发类', icon: 'web', files: allFiles.filter(file => file.url.includes('/posts/')) },
  { name: '大模型类', icon: 'ai', files: allFiles.filter(file => file.url.includes('/blogs/')) },
];

const icons = {
  tool: `<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"><path fill="currentColor" d="M21.71 20.29l-3.68-3.68A8.963 8.963 0 0 0 20 11c0-5-4-9-9-9s-9 4-9 9s4 9 9 9c2.39 0 4.52-.96 6.12-2.5l3.68 3.68a.996.996 0 1 0 1.41-1.41zM11 18c-3.87 0-7-3.13-7-7s3.13-7 7-7s7 3.13 7 7s-3.13 7-7 7z"/></svg>`,
  web: `<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"><path fill="currentColor" d="M20 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm-5 14H4v-4h11v4zm0-5H4V9h11v4zm5 5h-4V9h4v9z"/></svg>`,
  ai: `<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
	<path fill="currentColor" d="M21 11V9h-2V7a2.006 2.006 0 0 0-2-2h-2V3h-2v2h-2V3H9v2H7a2.006 2.006 0 0 0-2 2v2H3v2h2v2H3v2h2v2a2.006 2.006 0 0 0 2 2h2v2h2v-2h2v2h2v-2h2a2.006 2.006 0 0 0 2-2v-2h2v-2h-2v-2Zm-4 6H7V7h10Z" />
	<path fill="currentColor" d="M11.361 8h-1.345l-2.01 8h1.027l.464-1.875h2.316L12.265 16h1.062Zm-1.729 5.324L10.65 8.95h.046l.983 4.374ZM14.244 8h1v8h-1z" />
</svg>`
};

const getIcon = (iconName) => icons[iconName] || '';
---

<nav class="hidden lg:block lg:pb-5 lg:pr-4" id="docMenu">
  <div class="mt-10 space-y-4">
    {categories.map((category) => (
      <div class="hs-accordion active">
        <button class="hs-accordion-toggle flex items-center w-full text-left text-xl font-bold text-gray-800 hover:text-blue-600 focus:outline-none">
          <span class="icon mr-2" set:html={getIcon(category.icon)}></span>
          {category.name}
        </button>
        <div class="hs-accordion-content mt-2">
          <ul class="space-y-2 border-l border-slate-200 pl-4">
            {category.files.map((file) => (
              <BlogPost url={file.url} title={file.frontmatter.title} />
            ))}
          </ul>
        </div>
      </div>
    ))}
  </div>
</nav>

<!-- sm模式左侧导航栏-->




<style>
    .leftsidebar {
      position: fixed;
    }
</style>

<script>
// 确认JavaScript代码是否被加载和执行
console.log('JavaScript代码已加载和执行');

// 选择ul和所有目录项
const menuPosts = document.getElementById('leftpostlist');
const menuBlogs = document.getElementById('leftbloglist');
const menuLinks = [...menuPosts.querySelectorAll('.menu-link'), ...menuBlogs.querySelectorAll('.menu-link')];

// 获取当前页面的路径并去掉末尾的斜杠
function getCurrentPagePath() {
      let pathname = window.location.pathname;
      return pathname.endsWith('/') ? pathname.slice(0, -1) : pathname;
}

// 获取链接的路径并去掉末尾的斜杠
function getLinkPath(link) {
      let linkPath = new URL(link.getAttribute('href'), window.location.origin).pathname;
      return linkPath.endsWith('/') ? linkPath.slice(0, -1) : linkPath;
}

// 页面加载时检查当前 URL，设置激活状态
window.addEventListener('DOMContentLoaded', () => {
      const currentPagePath = getCurrentPagePath();

      menuLinks.forEach(link => {
        const linkPath = getLinkPath(link);
        if (currentPagePath === linkPath) {
          link.classList.add('active');
        } else {
          link.classList.remove('active');
        }
      });
});

// 为每个链接添加点击事件
menuLinks.forEach((link) => {
      link.addEventListener('click', function(event) {
        event.preventDefault();
        window.location.href = this.getAttribute('href');
      });
});
</script>