---
const allFiles = await Astro.glob('../pages/**/*.md');
import BlogPost from '../components/BlogPost.astro';

// 将文件按目录分组
// 将文件按目录分组
const posts = allFiles.filter(file => file.url.includes('/posts/'));
const blogs = allFiles.filter(file => file.url.includes('/blogs/'));

---

<div class=" leftsidebar flex items-center justify-between py-2.5 lg:hidden"><a id="toggleDocMenu" class="flex items-center gap-2 text-xs"><svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentcolor" class="h-6 w-6"><path stroke-linecap="round" stroke-linejoin="round" d="M3.75 6.75h16.5M3.75 12H12m-8.25 5.25h16.5"></path></svg>Menu</a>

  <a href="#" class="text-sm"><svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentcolor" class="h-4 w-4"><path stroke-linecap="round" stroke-linejoin="round" d="M4.5 10.5 12 3m0 0 7.5 7.5M12 3v18"></path></svg></a></div>
  

  <div class="-ml-2 hidden lg:m-0 lg:block lg:pb-5 lg:pr-4" id="docMenu">
        <nav class="text-sm capitalize">
          <ul class="space-y-5 leading-loose">
            <li>
              <h4 class="mt-14 mb-2 lg:mb-3 font-semibold text-slate-900 dark:text-slate-400">记录类blogs</h4>
              <ul id="leftpostlist" class="space-y-6 lg:space-y-2 border-l border-slate-100 dark:border-slate-800">
                {posts.map((post) =><BlogPost url={post.url} title={post.frontmatter.title}/>)}
              </ul>
            </li>
            <li>
              <h4 class="mt-14 mb-2 lg:mb-3 font-semibold text-slate-900 dark:text-slate-400">大模型相关blogs</h4>
              <ul id="leftbloglist" class="space-y-6 lg:space-y-2 border-l border-slate-100 dark:border-slate-800">
                {blogs.map((blog) =><BlogPost url={blog.url} title={blog.frontmatter.title}/>)}
              </ul>
            </li>
          </ul>
        </nav>
</div>

<style>
    .leftsidebar {
      position: fixed;
    }
</style>

<script>
// 确认JavaScript代码是否被加载和执行
console.log('JavaScript代码已加载和执行');

// 选择ul和所有目录项
const menuPosts = document.getElementById('leftpostlist');
const menuBlogs = document.getElementById('leftbloglist');
const menuLinks = [...menuPosts.querySelectorAll('.menu-link'), ...menuBlogs.querySelectorAll('.menu-link')];

// 获取当前页面的路径并去掉末尾的斜杠
function getCurrentPagePath() {
      let pathname = window.location.pathname;
      return pathname.endsWith('/') ? pathname.slice(0, -1) : pathname;
}

// 获取链接的路径并去掉末尾的斜杠
function getLinkPath(link) {
      let linkPath = new URL(link.getAttribute('href'), window.location.origin).pathname;
      return linkPath.endsWith('/') ? linkPath.slice(0, -1) : linkPath;
}

// 页面加载时检查当前 URL，设置激活状态
window.addEventListener('DOMContentLoaded', () => {
      const currentPagePath = getCurrentPagePath();

      menuLinks.forEach(link => {
        const linkPath = getLinkPath(link);
        if (currentPagePath === linkPath) {
          link.classList.add('active');
        } else {
          link.classList.remove('active');
        }
      });
});

// 为每个链接添加点击事件
menuLinks.forEach((link) => {
      link.addEventListener('click', function(event) {
        event.preventDefault();
        window.location.href = this.getAttribute('href');
      });
});
</script>
