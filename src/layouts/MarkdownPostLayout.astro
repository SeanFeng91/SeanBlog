---
import Rightsideber from '../components/Rightsideber.astro';
import BaseLayout from './BaseLayout.astro';
// import '../scripts/scrollmd.js';
const { frontmatter } = Astro.props;
---

<style>
  a {
    color: #00539F;
  }


  .tags {
    display: flex;
    flex-wrap: wrap;
  }

  .tag {
    margin: 0.25em;
    border: dotted 1px #a1a1a1;
    border-radius: .5em;
    padding: .5em 1em;
    font-size: 1.15em;
    background-color: #F8FCFD;
  }

  .container {
    padding: 3rem 0;
    max-width: 1152px;
  }

  .meta {
    display: flex;
    align-items: center;
    justify-content: space-between;
    gap: 2rem;
  }

  /* And more... */
</style>

<BaseLayout pageTitle={frontmatter.title}>
  <div class="overflow-y-auto flex-1 justify-center items-center">
    <p class="text-center text-4xl text-pretty">{frontmatter.title}</p>
    <p class="text-center p-0"><em>{frontmatter.description}</em></p>
    <!-- <p>{frontmatter.pubDate.toString().slice(0,10)}</p> -->
    <p class="text-center">作者: {frontmatter.author}    第一次发表：{frontmatter.pubDate.toString().slice(0,10)}</p>
<!-- 
  <img src={frontmatter.image.url} width="300" alt={frontmatter.image.alt} />

  <div class="tags">``````````````````
    {frontmatter.tags.map((tag) => (
      <p class="tag"><a href={`/SeanBlog/tags/${tag}`}>{tag}</a></p>
    ))}
  </div> -->
  </div>
    <!-- <main> -->
    
    <section slot="Rightbar">
      <Rightsideber />
    </section>
  <!-- </main> -->
    <slot class="dark:text-slate-200"/>

   
</BaseLayout>

<script>
  document.addEventListener('DOMContentLoaded', () => {
// 实现右侧导航栏跟随文章标题联动高亮
  const headings = document.querySelectorAll('h1, h2, h3, h4, h5, h6');
  const rightsidebar = document.getElementById('rightsidebar');
  const rightbarLinks = rightsidebar.querySelectorAll('.rightbar-link');
  const observerOptions = {
    root: null,
    rootMargin: '-20% 0px -60% 0px', // 提前90%的视口高度开始检测
    threshold: 0.1, // 10%的部分进入视口即触发
  };
  
  // 获取链接的路径并去掉末尾的斜杠
  function getLinkPath(link) {
      // let linkPath = new URL(link.getAttribute('href'), window.location.origin).pathname;
      let linkPath = link.getAttribute('href')
      return linkPath;
      // return linkPath.endsWith('/') ? linkPath.slice(0, -1) : linkPath;
    }
  const observerCallback = (entries) => {
    let activeId = null;

    entries.forEach((entry) => {
      // 选择ul和所有目录项

      if (entry.isIntersecting) {
        activeId = entry.target.getAttribute('id');
      }
      const id = entry.target.getAttribute('id');
      // console.log(`Scrolling id ${id}`);  // 调试信息
          
      const navItem = document.querySelector('a[href="#{id}"]');
      // console.log(`rightbarLinks id ${rightbarLinks}`);  // 调试信息
      if(activeId){
          rightbarLinks.forEach(link => {

          const linkPath = getLinkPath(link);
          if (entry.isIntersecting && linkPath ===`#${id}`) {
            link.classList.add('active');
        } else {
          link.classList.remove('active');
        }
        })
      }    
    });
  };

  const observer = new IntersectionObserver(observerCallback, observerOptions);

  // 观察所有的标题
  document.querySelectorAll('h1, h2, h3, h4, h5, h6').forEach((heading) => {
    observer.observe(heading);
  });
  // 初始页面加载时设置第一个标题的active状态-未实现

});


    // 尝试看能不能把rightsidebar的跳转附加到正文内-可以的

    document.querySelectorAll('a[href^="#"]').forEach(anchor => {
    anchor.addEventListener('click', function (e) {
      e.preventDefault();

      const targetId = this.getAttribute('href').substring(1); // 去掉#
      const targetElement = document.getElementById(targetId);
      if (!targetElement) {
        console.error(`Element with ID ${targetId} not found`);
        return;
      }
      const header = document.getElementById('fixed-header');
      const headerHeight = 200;
      const elementPosition = targetElement.getBoundingClientRect().top;
      const offsetPosition = elementPosition + window.scrollY - headerHeight;

      console.log(`Scrolling to ${targetId}`);  // 调试信息
      console.log(`Target element:`, targetElement);  // 调试信息

      window.scrollTo({
        top: offsetPosition,
        behavior: 'smooth'
      });
    });
  });

</script>

