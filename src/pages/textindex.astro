---
// const headings2 = [
//   {
//     depth: 1,
//     text: "Astro 0.18 Release",
//     slug: "astro-018-release"
//   },
//   {
//     depth: 2,
//     text: "Responsive partial hydration",
//     slug: "responsive-partial-hydration"
//   }
//   // 更多标题对象
// ];
// const allPosts = await Astro.glob('../pages/posts/*.md');
// // 查找 depth 为 1 的标题对象
// const headingDepth1 = headings2.find(heading => heading.depth === 1);

// allPosts.forEach((post, index) => {
//   // console.log(`Post ${index + 1}:`);
//   // 输出检测了不同层级的headings
  
//   const headings = post.getHeadings();
//   if (headings.length > 0) {
//     const cont = 0
//     headings.forEach((ih) =>{
//     const hdepth = ih.depth;
//     const hdepthofh = ih.text;
//     if (hdepth < 3){
//       // console.log(`headingdepth: ${hdepth} headingtext: ${hdepthofh}`);
//     }
    
//     })
    
//   } else {
//     console.log('No headings found.');
//   }
// });

// allPosts.forEach((post, index) => {
//   // console.log(`Post ${index + 1}:`);
//   const headings = post.getHeadings();
//   if (headings.length > 0) {
//     headings.map((heading, headingIndex) => {
//       // console.log(`Heading ${headingIndex + 1} slug: ${heading.slug}`);
//     });
//   } else {
//     // console.log('No headings found.');
//   }
// });

// 测试更换目录树
// 获取当前页面路径
// const currentPath = Astro.url.pathname;

import IndexLayout from '../layouts/IndexLayout.astro';
---

<style>
  /* 修改了英文字体 */
	@font-face {
	font-family: "Cera Round Pro Bold";
	src: url("https://db.onlinewebfonts.com/t/9d23cda2fd2a195a8467e0967debd4d3.eot");
	src: url("https://db.onlinewebfonts.com/t/9d23cda2fd2a195a8467e0967debd4d3.eot?#iefix")format("embedded-opentype"),
	url("https://db.onlinewebfonts.com/t/9d23cda2fd2a195a8467e0967debd4d3.woff2")format("woff2"),
	url("https://db.onlinewebfonts.com/t/9d23cda2fd2a195a8467e0967debd4d3.woff")format("woff"),
	url("https://db.onlinewebfonts.com/t/9d23cda2fd2a195a8467e0967debd4d3.ttf")format("truetype"),
	url("https://db.onlinewebfonts.com/t/9d23cda2fd2a195a8467e0967debd4d3.svg#Cera Round Pro Bold")format("svg");
	}
	body{
	  font-family: "Cera Round Pro Bold";
	}
	p {
	  font-family: "Helvetica Neue", "Helvetica", "Arial", sans-serif;
	}
  </style>

<IndexLayout>
  <div slot="maindiv">
  <h1>       
    测试新玩意       
  </h1>

  <astro-dev-toolbar-card class="m-10" icon="astro:logo" link="https://github.com/withastro/astro/issues/new/choose">报告问题</astro-dev-toolbar-card>
  

  <div>
    <!-- component 三个动态按钮 -->
    <div class='flex flex-col items-center justify-center  gap-6 '>
      <div class='button w-40 h-16 bg-blue-500 rounded-lg cursor-pointer select-none
        active:translate-y-2  active:[box-shadow:0_0px_0_0_#1b6ff8,0_0px_0_0_#1b70f841]
        active:border-b-[0px]
        transition-all duration-150 [box-shadow:0_10px_0_0_#1b6ff8,0_15px_0_0_#1b70f841]
        border-b-[1px] border-blue-400
      '>
        <span class='flex flex-col justify-center items-center h-full text-white font-bold text-lg '>Active</span>
      </div>

      <div class='button w-40 h-16 bg-blue-500  cursor-pointer select-none
        active:translate-y-2  active:[box-shadow:0_0px_0_0_#1b6ff8,0_0px_0_0_#1b70f841]
        active:border-b-[0px]
        transition-all duration-150 [box-shadow:0_10px_0_0_#1b6ff8,0_15px_0_0_#1b70f841]
        rounded-full  border-[1px] border-blue-400
        
      '>
        <span class='flex flex-col justify-center items-center h-full text-white font-bold text-lg '>Love Me</span>
      </div>

      <div class='button w-16 h-16 bg-blue-500 rounded-full cursor-pointer select-none
        active:translate-y-2  active:[box-shadow:0_0px_0_0_#1b6ff8,0_0px_0_0_#1b70f841]
        active:border-b-[0px]
        transition-all duration-150 [box-shadow:0_8px_0_0_#1b6ff8,0_13px_0_0_#1b70f841]
        border-[1px] border-blue-400
      '>
        <span class='flex flex-col justify-center items-center h-full text-white font-bold text-lg '>?</span>
      </div>
    </div>
  </div>

  




  <!-- component 滚动换色页面-->
  <div class="mt-10 max-h-60 relative overflow-auto">
    <div class="sticky top-0 h-60 flex flex-col items-center justify-center bg-green-400">
        <h2 class="text-4xl">The First Title</h2>
        <p>Scroll Down</p>
    </div>
    <div class="sticky top-0 h-60 flex flex-col items-center justify-center bg-indigo-600 text-white">
        <h2 class="text-4xl">The Second Title</h2>
        <p>Scroll Down</p>
    </div>
    <div class="sticky top-0 h-60 flex flex-col items-center justify-center bg-purple-600 text-white">
        <h2 class="text-4xl">The Third Title</h2>
        <p>Scroll Down</p>
    </div>
    <div class="sticky top-0 h-60 flex flex-col items-center justify-center bg-neutral-800 text-white">
        <h2 class="text-4xl">The Fourth Title</h2>
    </div>
  </div>
  <!-- component 彩色换页 -->
    <div class="mt-10 h-2/5 w-full overflow-hidden flex flex-nowrap text-center" id="slider">
        <div class="bg-blue-600 text-white space-y-4 flex-none w-full flex flex-col items-center justify-center">
            <h2 class="text-4xl max-w-md">Your Big Ideia</h2>
            <p class="max-w-md">It's fast, flexible, and reliable — with zero-runtime.</p>
        </div>
        <div class="bg-pink-400 text-white space-y-4 flex-none w-full flex flex-col items-center justify-center">
            <h2 class="text-4xl max-w-md">Tailwind CSS works by scanning all of your HTML</h2>
            <p class="max-w-md">It's fast, flexible, and reliable — with zero-runtime.</p>
        </div>
        <div class="bg-teal-500 text-white space-y-4 flex-none w-full flex flex-col items-center justify-center">
            <h2 class="text-4xl max-w-md">React, Vue, and HTML</h2>
            <p class="max-w-md">Accessible, interactive examples for React and Vue powered by Headless UI, plus vanilla HTML if you’d rather write any necessary JS yourself.</p>
        </div>
    </div>
  
    <div x-data="{isLoading:false, isFestive:false, isShowDetail:false}" class="bg-gradient-to-t flex-col from-lime-50 to-sky-100 min-w-screen min-h-screen flex items-center justify-center">
      <!-- Title -->
      <h1 class="text-3xl mb-4 text-blue-950">Font Awesome Style <span class="text-yellow-500">Button.</span></h1>
      <div class="p-4 bg-white rounded-md drop-shadow-2xl flex flex-col space-y-4">
        <div class="flex items-start space-x-4">
          <!-- Loading Button -->
          <div @click="isLoading = !isLoading" class="bg-yellow-500 duration-150 hover:!border-b-2 text-blue-950 rounded-xl drop-shadow-lg group flex items-center border-2 border-b-4 border-blue-950 cursor-pointer active:bg-yellow-400">
            <div class="py-2 px-3" x-text="isLoading ? 'Loading...' : 'Click to load'">
            </div>
            <div  :class="isLoading ? 'opacity-100 scale-100 duration-200 w-auto py-2 pr-3' : 'opacity-0 scale-0 duration-100 w-0 p-0'">
            <i class="fad fa-spinner-third animate-spin"></i>
            </div>
          </div>
          <!-- Icon Button -->
          <div @click="isFestive = !isFestive" class="bg-zinc-100 duration-150 hover:!border-b-2 text-blue-950 rounded-xl drop-shadow-lg group flex items-center border-2 border-b-4 border-blue-950 cursor-pointer active:bg-zinc-300">
            <div class="py-2 pl-3">
            <i class="fad fa-party-horn text-xl"></i>
            </div>
            <div class="py-2 px-3" x-text="isFestive ? 'Happy New Year!!' : 'Click to celebrate'">
            
            </div>
          </div>
          <!-- Detail Button -->
          <div @click="isShowDetail = !isShowDetail" class="bg-indigo-400 duration-150 hover:!border-b-2 text-white rounded-xl drop-shadow-lg group flex flex-col items-center border-2 border-b-4 border-blue-950 cursor-pointer active:bg-indigo-500 overflow-hidden">
            <div class="py-2 px-3" x-text="isShowDetail ? 'Now you see detail' : 'Click for more detail'">
            </div>
            <div :class="isShowDetail ? 'opacity-100 duration-300 h-auto py-4 px-3 border-t-4 bg-indigo-100' : 'opacity-0 duration-100 border-t-0 h-[0px] p-0'" class="border-dashed border-indigo-300 w-full">
              <p :class="isShowDetail ? 'translate-y-0 opacity-80' : '-translate-y-[20%] opacity-0'"  class="text-blue-900 text-xs duration-150 delay-100">Ok, This is something that <br> I have to put here, Even I<br> have no idea what to type.</p>
            </div>
          </div>
        </div>
      </div>
      <!-- Background confetti -->
      <canvas :class="isFestive ? 'opacity-100 translate-y-0 duration-1000' : 'opacity-0 -translate-y-[100%]'" id="my-canvas" class="absolute pointer-events-none"></canvas>
      </div>


  </div>
  

    
</IndexLayout>


<script>
  document.addEventListener('DOMContentLoaded', () => {
      const slider = document.querySelector('#slider');
      setTimeout(function moveSlide() {
          const max = slider.scrollWidth - slider.clientWidth;
          const left = slider.clientWidth;

          if (max === slider.scrollLeft) {
              slider.scrollTo({left: 0, behavior: 'smooth'})
          } else {
              slider.scrollBy({left, behavior: 'smooth'})
          }
          setTimeout(moveSlide, 1000)
      }, 1000)
  })
</script>

<!-- Font awesome -->
<link rel="stylesheet" href="https://pro.fontawesome.com/releases/v6.0.0-beta3/css/all.css"
      />
<script src="https://cdn.jsdelivr.net/gh/alpinejs/alpine@v2.8.2/dist/alpine.min.js" defer></script>
<script src="https://cdn.jsdelivr.net/npm/confetti-js@0.0.18/dist/index.min.js"></script>

<script>
let confettiElement = document.getElementById('my-canvas');
console.log(confettiElement,'confettiElement');
let confettiSettings = { target: confettiElement };
let confetti = new ConfettiGenerator(confettiSettings);
confetti.render();
</script>


