---
import IndexLayout from '../../layouts/IndexLayout.astro';
import BaseLayout from '../../layouts/BaseLayout.astro';

const allPosts = await Astro.glob('../**/*.{md,mdx}');
const tags = [...new Set(allPosts.map((post) => post.frontmatter.tags).flat())];

const pageTitle = "标签索引";
---
<IndexLayout pageTitle={pageTitle}>
  <div slot="maindiv" class="container max-w-fit px-2">
    <h1 class="text-4xl font-bold text-center mb-8">
      <span class="bg-clip-text text-transparent bg-gradient-to-r from-pink-500 to-violet-500">
        这里是我所有的博客，请根据标签进行筛选
      </span>
    </h1>
    
    <div id="tags" class="flex flex-wrap justify-center gap-2 mb-8">
      <button class="tag bg-gray-200 hover:bg-gray-300 text-gray-800 font-semibold py-2 px-4 rounded-full transition duration-300" data-tag="all">全部</button>
      {tags.map(tag => (
        <button class="tag bg-gray-200 hover:bg-gray-300 text-gray-800 font-semibold py-2 px-4 rounded-full transition duration-300" data-tag={tag}>{tag}</button>
      ))}
    </div>
    
    <div id="posts" class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
      {allPosts.map((post, index) => (
        <div class="post" data-tags={post.frontmatter.tags.join(',')}>
          <div data-aos="fade-up" data-aos-offset="100" data-aos-delay={index * 100} data-aos-duration="800" 
               class="bg-white dark:bg-gray-800 rounded-lg shadow-md overflow-hidden h-full flex flex-col">
            <div class="p-6 flex-grow">
              <p class="text-sm font-medium text-gray-500 dark:text-gray-400 mb-2">博客 #{index + 1}</p>
              <h2 class="text-xl font-bold mb-2 text-gray-800 dark:text-white line-clamp-1 hover:text-blue-600 dark:hover:text-blue-400 transition duration-300">
                <a href={post.url} class="no-underline">{post.frontmatter.title}</a>
              </h2>
              <p class="text-gray-600 dark:text-gray-300 text-sm line-clamp-3">
                {post.frontmatter.description}
              </p>
            </div>
            <div class="px-6 py-4 bg-gray-50 dark:bg-gray-700">
              <div class="flex flex-wrap gap-2">
                {post.frontmatter.tags.map((tag) => (
                  <span class="inline-block bg-gray-200 dark:bg-gray-600 rounded-full px-3 py-1 text-sm font-semibold text-gray-700 dark:text-gray-200">
                    {tag}
                  </span>
                ))}
              </div>
            </div>
          </div>
        </div>
      ))}
    </div>
  </div>
</IndexLayout>

<style>
  .tag.selected {
    @apply bg-blue-500 text-white;
  }
</style>

<script is:inline src="https://unpkg.com/aos@next/dist/aos.js"></script>
<script is:inline> 
  AOS.init({
    once: true,
    disable: 'phone'
  });
</script>

<script is:inline>
  document.addEventListener('DOMContentLoaded', () => {
    const tags = document.querySelectorAll('.tag');
    const posts = document.querySelectorAll('.post');
    let selectedTags = new Set(['all']);

    function filterPosts() {
      if (selectedTags.has('all')) {
        posts.forEach(post => post.style.display = 'block');
      } else {
        posts.forEach(post => {
          const postTags = post.getAttribute('data-tags').split(',');
          const hasAllSelectedTags = Array.from(selectedTags).every(selectedTag => postTags.includes(selectedTag));
          post.style.display = hasAllSelectedTags ? 'block' : 'none';
        });
      }
      AOS.refresh();
    }

    function handleTagClick(event) {
      const clickedTag = event.currentTarget;
      const tagName = clickedTag.getAttribute('data-tag');

      if (tagName === 'all') {
        selectedTags.clear();
        selectedTags.add('all');
        tags.forEach(tag => tag.classList.toggle('selected', tag === clickedTag));
      } else {
        selectedTags.delete('all');
        clickedTag.classList.toggle('selected');
        if (clickedTag.classList.contains('selected')) {
          selectedTags.add(tagName);
        } else {
          selectedTags.delete(tagName);
        }
        if (selectedTags.size === 0) {
          selectedTags.add('all');
          document.querySelector('.tag[data-tag="all"]').classList.add('selected');
        } else {
          document.querySelector('.tag[data-tag="all"]').classList.remove('selected');
        }
      }
      filterPosts();
    }

    tags.forEach(tag => {
      tag.addEventListener('click', handleTagClick);
    });

    filterPosts();
  });
</script>