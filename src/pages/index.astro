---
// 导入必要的样式和布局组件
import "../styles/global.css";
import IndexLayout from '../layouts/IndexLayout.astro';

// 获取所有博客文章
const allPosts = await Astro.glob('../pages/**/*.{md,mdx}');

// 获取特定类型的文章（已实现的功能和问题/目标）
const achieved = await Astro.glob('../pages/posts/03Achieved.{md,mdx}');
const problems = await Astro.glob('../pages/posts/02ProblemsAndAims.{md,mdx}');

// 设置页面标题
const pageTitle = "SeanBlog";
---
<style>

	@media (min-width: 1024px) {
	  :root {
		--mt: -80px;
	  }
	}
	
	@media (max-width: 1023px) {
	  :root {
		--mt: 20;
	  }
	}
</style>

<IndexLayout pageTitle={pageTitle}>
	<div x-data="{isLoading:false, isFestive:false, isShowDetail:false}" slot="maindiv" class="container mx-auto px-0 md:px-8 lg:px-16 py-8 max-w-screen-xl">
		<!-- 页面标题 -->
		<h1 class="text-4xl md:text-6xl font-bold text-center mb-8 bg-clip-text text-transparent bg-gradient-to-r from-blue-500 to-purple-500">
			My Awesome Blog with <span class="text-yellow-500">Astro & Tailwind</span>
		</h1>

		<!-- 庆祝按钮 -->
		<div class="flex justify-center mb-12">
			<button 
				@click="isFestive = !isFestive" 
				class="bg-gradient-to-r from-blue-500 to-purple-500 text-white font-bold py-2 px-4 rounded-full shadow-lg hover:shadow-xl transition duration-300 ease-in-out transform hover:-translate-y-1 hover:scale-105"
			>
				<span x-text="isFestive ? 'Welcome!!' : 'Click to celebrate'"></span>
				<i class="fas fa-party-horn ml-2"></i>
			</button>
		</div>

		<!-- 彩带效果画布 -->
		<canvas 
			:class="isFestive ? 'opacity-100 translate-y-0 duration-1000' : 'opacity-0 -translate-y-full'" 
			id="my-canvas" 
			class="absolute top-0 left-0 w-full h-full pointer-events-none transition-all"
		></canvas>

		<!-- 动画文本部分 -->
		<section class="bg-gradient-to-r from-blue-500 to-purple-500 text-white p-8 rounded-lg shadow-xl mb-12">
			<p class="tlt text-xl md:text-3xl text-center">
				使用cursor编辑器,我可以轻松处理复杂的代码结构,快速定位和修改所需内容。无论是重构还是新功能开发,cursor都让我事半功倍。它智能的代码补全和实时错误检查功能大大提高了我的编码效率和质量。我现在可以更专注于创意和逻辑,而不是被繁琐的语法细节所困扰。cursor真是我的得力助手!
			</p>
		</section>

		<!-- "正在进行" 和 "已完成" 部分 -->
		<div class="grid grid-cols-1 md:grid-cols-2 gap-8 mb-12">
			<!-- 正在进行的工作 -->
			<div class="bg-white dark:bg-gray-800 rounded-lg shadow-xl p-6">
				<h3 class="text-2xl font-bold mb-4 text-gray-800 dark:text-white">Now Working on:</h3>
				<div class="overflow-auto max-h-60 pr-2 custom-scrollbar">
					{problems.map((post, index) => {
						const headings = post.getHeadings();
						return headings.map((heading, headingIndex) => (
							<div class="flex items-center space-x-3 py-2 border-b border-gray-200 dark:border-gray-700 last:border-b-0">
								<input type="checkbox" id={`task-${index}-${headingIndex}`} class="form-checkbox h-5 w-5 text-blue-600 rounded focus:ring-blue-500 dark:bg-gray-700 dark:border-gray-600" />
								<label for={`task-${index}-${headingIndex}`} class="text-sm text-gray-700 dark:text-gray-300">{heading.text}</label>
							</div>
						));
					})}
				</div>
			</div>

			<!-- 已完成的工作 -->
			<div class="bg-white dark:bg-gray-800 rounded-lg shadow-xl p-6">
				<h3 class="text-2xl font-bold mb-4 text-gray-800 dark:text-white">What I have Got:</h3>
				<div class="overflow-auto max-h-60 pr-2 custom-scrollbar">
					{achieved.map((post, index) => {
						const headings = post.getHeadings();
						return headings.map((heading, headingIndex) => (
							<p class="text-sm text-gray-700 dark:text-gray-300 py-2 border-b border-gray-200 dark:border-gray-700 last:border-b-0">
								{headingIndex+1}. {heading.text}
							</p>
						));
					})}
				</div>
			</div>
		</div>

		<!-- 博客文章水平自动滚动区域 -->
		<div class="mb-20 overflow-x-auto relative">
			<div class="flex animate-scroll" style="width: max-content;">
				{allPosts.map((indexcard, index) => (
					<div 
						class="flex-shrink-0 w-64 sm:w-80 md:w-96 px-2"
					>
						<div class="bg-white dark:bg-gray-700 rounded-lg overflow-hidden shadow-sm transition-all duration-300 hover:shadow-md">
							<div class="relative h-32">
								<img 
									class="w-full h-full object-cover" 
									src={indexcard.frontmatter.image?.url || "https://via.placeholder.com/400x200"} 
									alt={indexcard.frontmatter.image?.alt || "Blog post cover"}
								/>
								<div class="absolute top-0 right-0 bg-blue-500 text-white text-xs font-bold px-2 py-1 m-2 rounded">
									{new Date(indexcard.frontmatter.pubDate).toLocaleDateString()}
								</div>
							</div>
							<div class="p-3">
								<h2 class="text-base font-semibold mb-1 text-gray-700 dark:text-white hover:text-blue-500 transition-colors duration-200">
									<a class="dark:text-white" href={indexcard.url}>{indexcard.frontmatter.title}</a>
								</h2>
								<p class="text-gray-600 dark:text-gray-300 text-xs mb-2 line-clamp-2">
									{indexcard.frontmatter.description}
								</p>
								<div class="flex justify-between items-center text-xs text-gray-500 dark:text-gray-400">
									<p class="flex items-center">
										<svg class="w-3 h-3 mr-1" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M10 9a3 3 0 100-6 3 3 0 000 6zm-7 9a7 7 0 1114 0H3z"></path></svg>
										{indexcard.frontmatter.author}
									</p>
									<a href={indexcard.url} class="text-blue-500 hover:text-blue-700 font-medium">阅读更多</a>
								</div>
							</div>
						</div>
					</div>
				))}
			</div>
		</div>

		<!-- 时间线部分 -->
		<div class="relative mt-20 mb-20">
			<div class="absolute left-4 md:left-1/2 top-0 bottom-0 w-0.5 bg-gradient-to-b from-blue-400 via-purple-500 to-pink-500 transform md:-translate-x-1/2"></div>
			<div class="absolute top-0 left-2 md:left-1/2 w-5 h-5 rounded-full bg-blue-400 transform md:-translate-x-1/2 -translate-y-1/2"></div>
			<div class="absolute bottom-0 left-2 md:left-1/2 w-5 h-5 rounded-full bg-pink-500 transform md:-translate-x-1/2 translate-y-1/2"></div>
			<div class="space-y-8">
				{allPosts.sort((a, b) => new Date(b.frontmatter.pubDate) - new Date(a.frontmatter.pubDate)).map((indexcard, index) => (
					<div 
						class="relative flex items-center md:justify-between mb-10"
						data-aos="fade-up"
						data-aos-duration="800"
						data-aos-delay={index * 150}
						style={`margin-top: ${index === 0 ? '0' : 'var(--mt)'}`}
						style={`margin-bottom: 10`}
					>
						<div class="absolute left-2 md:left-1/2 w-5 h-5 rounded-full bg-gradient-to-r from-blue-400 to-purple-500 shadow-lg flex 
						items-center justify-center z-10 transform md:-translate-x-1/2">
							<div class="w-3 h-3 rounded-full bg-white dark:bg-gray-700"></div>
						</div>
						<div class={`ml-12 md:ml-0 md:w-6/12 ${index % 2 === 0 ? 'md:mr-auto md:pr-8 ' : 'md:ml-auto md:pl-8'}`}>
							<div class="bg-white dark:bg-gray-700 rounded-lg shadow-md overflow-hidden transition-all duration-300 hover:shadow-xl hover:-translate-y-1">
								<div class="px-4">
									<div class="mb-4">
										<div class="mb-0 md:mb-0">
											<h3 class="text-xl mt-4 mb-0 font-bold text-gray-800 dark:text-white line-clamp-2">
											<a href={indexcard.url} class="hover:text-blue-500 dark:text-white transition-colors duration-200 no-underline">
												{indexcard.frontmatter.title}
											</a>
											</h3>
										</div>
										<div class="w-full md:w-auto md:mt-0 inline-block object-bottom">
											<span class="inline-block mt-auto object-bottom bg-blue-200 text-white text-xs font-bold px-2 py-1 rounded">
												{new Date(indexcard.frontmatter.pubDate).toLocaleDateString()}
											</span>
										</div>
									</div>
									<p class="text-sm text-gray-600 dark:text-gray-300 mb-3 line-clamp-2 mt-2">
										{indexcard.frontmatter.description}
									</p>
									<div class="flex justify-between items-center text-xs text-gray-500 dark:text-gray-400">
										<p class="flex items-center">
											<svg class="w-4 h-4 mr-1" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M10 9a3 3 0 100-6 3 3 0 000 6zm-7 9a7 7 0 1114 0H3z"></path></svg>
											{indexcard.frontmatter.author}
										</p>
									</div>
								</div>
							</div>
						</div>
					</div>
				))}
			</div>
		</div>
	</div>
</IndexLayout>

<style>
/* 自定义滚动条样式 */
.custom-scrollbar::-webkit-scrollbar {
  width: 8px;
}

.custom-scrollbar::-webkit-scrollbar-track {
  background: #f1f1f1;
  border-radius: 10px;
}

.custom-scrollbar::-webkit-scrollbar-thumb {
  background: #888;
  border-radius: 10px;
}

.custom-scrollbar::-webkit-scrollbar-thumb:hover {
  background: #555;
}

/* 暗黑模式下的滚动条样式 */
@media (prefers-color-scheme: dark) {
  .custom-scrollbar::-webkit-scrollbar-track {
    background: #2d3748;
  }

  .custom-scrollbar::-webkit-scrollbar-thumb {
    background: #4a5568;
  }

  .custom-scrollbar::-webkit-scrollbar-thumb:hover {
    background: #718096;
  }
}

@keyframes scroll {
    0% {
        transform: translateX(0);
    }
    100% {
        transform: translateX(calc(-100% + 100vw));
    }
}

.animate-scroll {
    animation: scroll 30s linear infinite;
    display: flex;
}

.animate-scroll:hover {
    animation-play-state: paused;
}

/* 自定义滚动条样式 */
.overflow-x-auto {
    scrollbar-width: thin;
    scrollbar-color: #4a5568 #cbd5e0;
}

.overflow-x-auto::-webkit-scrollbar {
    height: 8px;
}

.overflow-x-auto::-webkit-scrollbar-track {
    background: #cbd5e0;
}

.overflow-x-auto::-webkit-scrollbar-thumb {
    background-color: #4a5568;
    border-radius: 20px;
    border: 3px solid #cbd5e0;
}

/* 暗黑模式下的滚动条样式 */
@media (prefers-color-scheme: dark) {
    .overflow-x-auto {
        scrollbar-color: #718096 #2d3748;
    }

    .overflow-x-auto::-webkit-scrollbar-track {
        background: #2d3748;
    }

    .overflow-x-auto::-webkit-scrollbar-thumb {
        background-color: #718096;
        border: 3px solid #2d3748;
    }
}
</style>

<!-- 引入 AOS 动画库 -->
<link rel="stylesheet" href="https://unpkg.com/aos@next/dist/aos.css" />
<script is:inline src="https://unpkg.com/aos@next/dist/aos.js"></script>
<script is:inline> 
  AOS.init();
</script>

<!-- 引入 Font Awesome 图标库 -->
<link rel="stylesheet" href="https://pro.fontawesome.com/releases/v6.0.0-beta3/css/all.css" />
<!-- 引入 Alpine.js -->
<script src="https://cdn.jsdelivr.net/gh/alpinejs/alpine@v2.8.2/dist/alpine.min.js" defer></script>
<!-- 引入 Confetti.js -->
<script src="https://cdn.jsdelivr.net/npm/confetti-js@0.0.18/dist/index.min.js"></script>

<!-- 初始化 Confetti 效果 -->
<script type="module">
	document.addEventListener('DOMContentLoaded', (event) => {
        let confettiElement = document.getElementById('my-canvas');
        if (confettiElement) {
            let confettiSettings = { target: confettiElement };
            let confetti = new ConfettiGenerator(confettiSettings);
            confetti.render();
        } else {
            console.error('Element with ID "my-canvas" not found');
        }
    });
</script>

<!-- 引入 jQuery 和 Textillate.js 相关库 -->
<script type="module" src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script type="module" src="https://cdnjs.cloudflare.com/ajax/libs/lettering.js/0.7.0/jquery.lettering.min.js"></script>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/3.7.0/animate.min.css" integrity="sha512-YTL2qFiv2wZNnC764l1DD5zN6lYxDzJ89Ss6zj6YoYIzr6+zwjdVKM1sUR+971X3h7qWCa9cPUBXyYqhOqWWLQ==" crossorigin="anonymous" referrerpolicy="no-referrer" />
<script type="module" src="https://cdn.rawgit.com/jschr/textillate/master/jquery.textillate.js"></script>

<!-- 初始化 Textillate 动画效果 -->
<script type="module">
    $(document).ready(function () {
        $('.tlt').textillate({
            selector: '.texts',
            loop: true,
            minDisplayTime: 2000,
            initialDelay: 0,
            autoStart: true,
            inEffects: ['fadeIn'],
            outEffects: ['fadeOut'],
            in: {
                effect: 'fadeIn',
                delayScale: 1.5,
                delay: 50,
                sync: false,
                shuffle: false
            },
            out: {
                effect: 'fadeOut',
                delayScale: 1.5,
                delay: 20,
                sync: false,
                shuffle: true
            }
        });
    });
</script>