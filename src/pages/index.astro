---
import "../styles/global.css";
import IndexLayout from '../layouts/IndexLayout.astro';
import Greeting from '../components/Greeting';

const allPosts = await Astro.glob('../pages/posts/*.md');
const achieved = await Astro.glob('../pages/posts/Achieved.md');
const problems = await Astro.glob('../pages/posts/ProblemsAndAims.md');

const { frontmatter } = Astro.props;
const pageTitle = "SeanBlog";

---

<IndexLayout pageTitle={pageTitle}>
	<span slot="maindiv">
		<h1 class="font-bold text-8lx text-center">This is My awesome blog with Astro&Tailwind</h2>
		<h2 class="text-center">		
			<Greeting client:load messages={["Hej", "Hallo", "Hola", "Habari"]}/>
		</h2>
		<!-- Now Working on:模块 -->
		<div class="p-4 flex-wrap mb-10 mt-10 grid grid-cols-1 lg:grid-cols-2 gap-4 auto-cols-max text-base ">
			<div class="p-2 border-spacing-2 outline-dotted outline-offset-2 rounded-md outline-slate-300 w-auto bg-slate-50 min-h-10">
				<h3 class="mt-1 pl-4">Now Working on:</h3>
				<div class="overflow-auto 
				[&::-webkit-scrollbar]:w-2
				[&::-webkit-scrollbar-track]:rounded-full
				[&::-webkit-scrollbar-track]:bg-gray-100
				[&::-webkit-scrollbar-thumb]:rounded-full
				[&::-webkit-scrollbar-thumb]:bg-gray-300
				dark:[&::-webkit-scrollbar-track]:bg-neutral-700
				dark:[&::-webkit-scrollbar-thumb]:bg-neutral-500
				max-h-40">
					{problems.map((post, index) => {
						const headings = post.getHeadings();
						return headings.map((heading, headingIndex) => (
						<div class="flex items-center space-x-2 rounded p-2 hover:bg-gray-100">
							<input type="checkbox" id="{headingIndex+1}" name="{headingIndex+1}" data-id={headingIndex+1} class="h-4 w-4 rounded border-gray-300 text-primary-600 shadow-sm focus:border-primary-300 focus:ring focus:ring-primary-200 focus:ring-opacity-50 focus:ring-offset-0 disabled:cursor-not-allowed disabled:text-gray-400" />
						  	<label for="{headingIndex+1}" class="flex w-full space-x-2 text-sm">{headingIndex+1}. {heading.text}</label>
						</div>
						));
					  })}


				</div>
			</div>
			<!-- What I have Got:模块 -->
			<div class="max-h-60 border-spacing-2 outline-dotted outline-offset-2 rounded-md outline-slate-300 w-auto p-2 bg-slate-50 min-h-10">
				<h3 class="mt-1 pl-4 space-y-3">What I have Got:</h3>
				<div class="overflow-auto
				[&::-webkit-scrollbar]:w-2
				[&::-webkit-scrollbar-track]:rounded-full
				[&::-webkit-scrollbar-track]:bg-gray-100
				[&::-webkit-scrollbar-thumb]:rounded-full
				[&::-webkit-scrollbar-thumb]:bg-gray-300
				dark:[&::-webkit-scrollbar-track]:bg-neutral-700
				dark:[&::-webkit-scrollbar-thumb]:bg-neutral-500
				 max-h-40 text-base">
					{achieved.map((post, index) => {
						const headings = post.getHeadings();
						return headings.map((heading, headingIndex) => (
						  <p class="text-sm space-x-2">{headingIndex+1}. {heading.text}</p>
						));
					  })}
				</div>
				
			</div>
		</div>
		<!-- 首页Cards功能模块 -->
		<div class="p-4 flex-wrap grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4 auto-cols-max auto-rows-max">
			{allPosts.map((indexcard,index)=><div class=" min-w-sm rounded-lg p-4 min-h-60 bg-white shadow">
				<h4 class="mt-1 mb-0 font-bold text-gray-300">Blog No.{index + 1}</h4>
				<h2 class="mt-1 text-2xl font-bold hover:text-orange-700 text-gray-900">
					<a href={indexcard.url}>{indexcard.frontmatter.title}</a>
				</h2>
				<p class="text-sm italic tracking-normal">
					{indexcard.frontmatter.description}
				</p>
				</div>)}
			
		</div>
	</span>
	<style>
		a {
		  text-decoration: none; /* 取消下划线 */
		}
		Headingsofblog {
			text-decoration: none; /* 取消下划线 */
		}
		
	</style>
	<script>
		// 获取所有复选框
		const checkboxes = document.querySelectorAll('input[type="checkbox"]');
	
		// 初始化复选框状态
		checkboxes.forEach(checkbox => {
		  // 明确声明checkbox的类型
		  const inputElement = checkbox as HTMLInputElement;
		  const id = inputElement.getAttribute('data-id');
		  const savedCheckedState = localStorage.getItem(`checkbox-${id}-checked`);
		  const label = document.querySelector(`label[for="${id}"]`);
	
		  if (savedCheckedState === 'true') {
			inputElement.checked = true;
			label?.classList.add('checked-label');
		  }
	
		  // 添加复选框状态改变的事件监听器
		  inputElement.addEventListener('change', function() {
			if (inputElement.checked) {
			  label?.classList.add('checked-label');
			  localStorage.setItem(`checkbox-${id}-checked`, 'true');
			} else {
			  label?.classList.remove('checked-label');
			  localStorage.setItem(`checkbox-${id}-checked`, 'false');
			}
		  });
		});
	  </script>
</IndexLayout>

<!-- {allPosts.map((post) =><BlogPost url={post.url} title={post.frontmatter.title}/>)} -->
