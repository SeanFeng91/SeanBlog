---
import "../styles/global.css";
import IndexLayout from '../layouts/IndexLayout.astro';
// import Greeting from '../components/Greeting';

// const allPosts = await Astro.glob('../pages/posts/*.md');
// // const allFiles = await Astro.glob('../pages/**/*.md');
// // import BlogPost from '../components/BlogPost.astro';

// const achieved = await Astro.glob('../pages/posts/03Achieved.md');
// const problems = await Astro.glob('../pages/posts/02ProblemsAndAims.md');
// const posts = allFiles.filter(file => file.url.includes('/posts/'));
// const blogs = allFiles.filter(file => file.url.includes('/blogs/'));

// const { frontmatter } = Astro.props;
const pageTitle = "SeanBlog";

---
<!-- <style>
	a {
	  text-decoration: none; /* 取消下划线 */
	}
	Headingsofblog {
		text-decoration: none; /* 取消下划线 */
	}
</style> -->

<IndexLayout pageTitle={pageTitle}>
	<div x-data="{isLoading:false, isFestive:false, isShowDetail:false}" slot="maindiv" class="dark:bg-neutral-800 ">
		<h1 class="font-bold text-8lx text-center underline decoration-sky-500 hover:decoration-dotted hover:uppercase">
			This is My awesome blog with <span class="text-yellow-500">Astro&Tailwind.</span></h1>
			<!-- <h2 class="text-center">		
				<Greeting client:load messages={["Hej", "Hallo", "Hola", "Habari"]}/>
			</h2> -->
		<!-- component 庆祝的按钮-->
		<div class=" flex-col min-w-screen flex items-center justify-center">
			<!-- Title -->
			<div class="p-4 rounded-md drop-shadow-2xl flex flex-col space-y-4">
			  <div class="flex items-start space-x-4">
				<!-- Loading Button -->
				<!-- <div @click="isLoading = !isLoading" class="bg-yellow-500 duration-150 hover:!border-b-2 text-blue-950 rounded-xl drop-shadow-lg group flex items-center border-2 border-b-4 border-blue-950 cursor-pointer active:bg-yellow-400">
				  <div class="py-2 px-3" x-text="isLoading ? 'Loading...' : 'Click to load'">
				  </div>
				  <div  :class="isLoading ? 'opacity-100 scale-100 duration-200 w-auto py-2 pr-3' : 'opacity-0 scale-0 duration-100 w-0 p-0'">
				  <i class="fad fa-spinner-third animate-spin"></i>
				  </div>
				</div> -->
				<!-- Icon Button -->
				<div @click="isFestive = !isFestive" class="bg-zinc-100 duration-150 hover:!border-b-2 text-blue-950 rounded-xl drop-shadow-lg group flex items-center border-2 border-b-4 border-blue-950 cursor-pointer active:bg-zinc-300">
				  <div class="py-2 pl-3">
				  <i class="fad fa-party-horn text-xl"></i>
				  </div>
				  <div class="py-2 px-3" x-text="isFestive ? 'Welcome!!' : 'Click to celebrate'">
				  </div>
				</div>
				<!-- Detail Button -->
				<!-- <div @click="isShowDetail = !isShowDetail" class="bg-indigo-400 duration-150 hover:!border-b-2 text-white rounded-xl drop-shadow-lg group flex flex-col items-center border-2 border-b-4 border-blue-950 cursor-pointer active:bg-indigo-500 overflow-hidden">
				  <div class="py-2 px-3" x-text="isShowDetail ? 'Now you see detail' : 'Click for more detail'">
				  </div>
				  <div :class="isShowDetail ? 'opacity-100 duration-300 h-auto py-4 px-3 border-t-4 bg-indigo-100' : 'opacity-0 duration-100 border-t-0 h-[0px] p-0'" class="border-dashed border-indigo-300 w-full">
					<p :class="isShowDetail ? 'translate-y-0 opacity-80' : '-translate-y-[20%] opacity-0'"  class="text-blue-900 text-xs duration-150 delay-100">Ok, This is something that <br> I have to put here, Even I<br> have no idea what to type.</p>
				  </div>
				</div> -->
			  </div>
			</div>
			<!-- Background confetti -->
		</div>
		<!-- 彩穗穗 -->
		<canvas :class="isFestive ? 'opacity-100 translate-y-0 duration-1000' : 'opacity-0 -translate-y-[100%]'" id="my-canvas" class="absolute pointer-events-none"></canvas>



		<section class="bg-teal-200 h-auto  text-white backdrop:bg-rose-800 flex items-center justify-center">
			<a class="text-md relative after:bg-white after:absolute after:h-1 after:w-0 
			after:bottom-0 after:left-0 hover:text-pink-400 hover:after:w-full after:transition-all after:duration-300 cursor-pointer">
			我在头部写了这个就影响script正常加载了 WHY: const achieved = await Astro.glob('../pages/posts/03Achieved.md');
			</a>
		</section>

		<!-- Now Working on:模块 -->
		<div class="p-4 flex-wrap mb-10 mt-10 grid grid-cols-1 lg:grid-cols-2 gap-4 auto-cols-max text-base ">
			<!-- <div class="p-2 border-spacing-2 outline-dotted outline-offset-2 rounded-md outline-slate-300 w-auto bg-slate-50 dark:bg-neutral-500 dark:text-slate-200 min-h-10">
				<h3 class="mt-1 pl-4 dark:text-slate-200">Now Working on:</h3>
				<div class="overflow-auto 
				[&::-webkit-scrollbar]:w-2
				[&::-webkit-scrollbar-track]:rounded-full
				[&::-webkit-scrollbar-track]:bg-gray-100 
				[&::-webkit-scrollbar-thumb]:rounded-full
				[&::-webkit-scrollbar-thumb]:bg-gray-300
				dark:[&::-webkit-scrollbar-track]:bg-neutral-700
				dark:[&::-webkit-scrollbar-thumb]:bg-neutral-500
				max-h-40">
					{problems.map((post, index) => {
						const headings = post.getHeadings();
						return headings.map((heading, headingIndex) => (
						<div class="flex items-center space-x-2 rounded p-2 hover:bg-gray-100">
							<input type="checkbox" id="{headingIndex+1}" name="{headingIndex+1}" data-id={headingIndex+1} class="h-4 w-4 rounded border-gray-300 text-primary-600 shadow-sm focus:border-primary-300 focus:ring focus:ring-primary-200 focus:ring-opacity-50 focus:ring-offset-0 disabled:cursor-not-allowed disabled:text-gray-400" />
						  	<label for="{headingIndex+1}" class="flex w-full space-x-2 text-sm">{headingIndex+1}. {heading.text}</label>
						</div>
						));
					  })}


				</div>
			</div> -->
			<!-- What I have Got:模块 -->
			<!-- <div class="max-h-60 border-spacing-2 outline-dotted outline-offset-2 rounded-md outline-slate-300 w-auto p-2 bg-slate-50 min-h-10 dark:bg-neutral-500 dark:text-slate-200">
				<h3 class="mt-1 pl-4 space-y-3 dark:text-slate-200">What I have Got:</h3>
				<div class="overflow-auto
				[&::-webkit-scrollbar]:w-2
				[&::-webkit-scrollbar-track]:rounded-full
				[&::-webkit-scrollbar-track]:bg-gray-100
				[&::-webkit-scrollbar-thumb]:rounded-full
				[&::-webkit-scrollbar-thumb]:bg-gray-300
				dark:[&::-webkit-scrollbar-track]:bg-neutral-700
				dark:[&::-webkit-scrollbar-thumb]:bg-neutral-500
				 max-h-40 text-base">
					{achieved.map((post, index) => {
						const headings = post.getHeadings();
						return headings.map((heading, headingIndex) => (
						  <p class="text-sm space-x-2">{headingIndex+1}. {heading.text}</p>
						));
					  })}
				</div>
				
			</div> -->
		</div>
		<!-- 首页Cards功能模块 -->
		<!-- <div class="p-4 flex-wrap grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4 auto-cols-max auto-rows-max dark:bg-neutral-800 dark:text-slate-400">
			{allPosts.map((indexcard,index)=><div class=" min-w-sm border rounded-lg p-4 min-h-60 bg-white dark:bg-neutral-100 shadow-sm ">
				<h4 class="mt-1 mb-0 font-bold light text-gray-400 dark:text-slate-200">Blog No.{index + 1}</h4>
				<h2 class="nav-links mt-1 text-2xl font-bold hover:text-blue-900 ">
					<a href={indexcard.url}>{indexcard.frontmatter.title}</a>
				</h2>
				<p class="text-sm italic tracking-normal text-pretty indent-8 leading-relaxed">
					{indexcard.frontmatter.description}
				</p>
				</div>)}			
		</div> -->

		
		<div class="h-2 rounded-lg bg-gradient-to-r from-indigo-500 via-purple-500 to-pink-500 ..."></div>

			<!-- 尝试新卡片组件 -->
			<!-- <div class="grid grid-flow-row auto-rows-max">
				{allPosts.map((indexcard)=> <div class="bg-white border rounded-xl shadow-sm sm:flex mt-6 p-4 dark:bg-neutral-100 dark:border-neutral-700 dark:shadow-neutral-700/70">
					<div class="shrink-0 relative w-full rounded-t-xl overflow-hidden sm:rounded-s-xl sm:max-w-60 md:rounded-se-none md:max-w-xs">
					<img class="size-3/4 absolute items-center ml-6 rounded-lg top-0 start-0 object-cover" 
					src="https://images.unsplash.com/photo-1680868543815-b8666dba60f7?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=560&q=80" alt="Card Image">
					</div>
					
					<div class="flex flex-wrap">
						<div class="p-4 flex flex-col h-auto sm:p-4">
							<h3 class="text-lg font-bold text-gray-800 dark:text-white">
								<a href={indexcard.url}>{indexcard.frontmatter.title}</a>
							</h3>
							<p class="mt-1 text-gray-500 dark:text-neutral-400">
								{indexcard.frontmatter.description}
							</p>
							<div class="mt-5 sm:mt-auto">
							<p class="text-xs text-gray-500 dark:text-neutral-500">
								{indexcard.frontmatter.pubDate}
							</p>
							</div>
						</div>
					</div>
				</div> )}
				
			</div> -->
			<!-- component 彩色换页 -->
			<div class="mt-10 h-2/5 w-full overflow-hidden flex flex-nowrap text-center" id="slider">
				<div class="bg-blue-600 text-white space-y-4 flex-none w-full flex flex-col items-center justify-center">
					<h2 class="text-4xl max-w-md">Your Big Ideia</h2>
					<p class="max-w-md">It's fast, flexible, and reliable — with zero-runtime.</p>
				</div>
				<div class="bg-pink-400 text-white space-y-4 flex-none w-full flex flex-col items-center justify-center">
					<h2 class="text-4xl max-w-md">Tailwind CSS works by scanning all of your HTML</h2>
					<p class="max-w-md">It's fast, flexible, and reliable — with zero-runtime.</p>
				</div>
				<div class="bg-teal-500 text-white space-y-4 flex-none w-full flex flex-col items-center justify-center">
					<h2 class="text-4xl max-w-md">React, Vue, and HTML</h2>
					<p class="max-w-md">Accessible, interactive examples for React and Vue powered by Headless UI, plus vanilla HTML if you’d rather write any necessary JS yourself.</p>
				</div>
			</div>
			

		</div>

		
</IndexLayout>


<!-- Font awesome -->
<link rel="stylesheet" href="https://pro.fontawesome.com/releases/v6.0.0-beta3/css/all.css"
/>
<script src="https://cdn.jsdelivr.net/gh/alpinejs/alpine@v2.8.2/dist/alpine.min.js" defer></script>
<script src="https://cdn.jsdelivr.net/npm/confetti-js@0.0.18/dist/index.min.js"></script>

<script>
let confettiElement = document.getElementById('my-canvas');
console.log(confettiElement,'confettiElement');
let confettiSettings = { target: confettiElement };
let confetti = new ConfettiGenerator(confettiSettings);
confetti.render();
</script>


<script>
	document.addEventListener('DOMContentLoaded', () => {
		const slider = document.querySelector('#slider');
		setTimeout(function moveSlide() {
			const max = slider.scrollWidth - slider.clientWidth;
			const left = slider.clientWidth;
  
			if (max === slider.scrollLeft) {
				slider.scrollTo({left: 0, behavior: 'smooth'})
			} else {
				slider.scrollBy({left, behavior: 'smooth'})
			}
			setTimeout(moveSlide, 1000)
		}, 1000)
	})
</script>

<!-- 勾选未完成事项 -->
<!-- <script>
		// 获取所有复选框
		const checkboxes = document.querySelectorAll('input[type="checkbox"]');
	
		// 初始化复选框状态
		checkboxes.forEach(checkbox => {
		  // 明确声明checkbox的类型
		  const inputElement = checkbox as HTMLInputElement;
		  const id = inputElement.getAttribute('data-id');
		  const savedCheckedState = localStorage.getItem(`checkbox-${id}-checked`);
		  const label = document.querySelector(`label[for="${id}"]`);
	
		  if (savedCheckedState === 'true') {
			inputElement.checked = true;
			label?.classList.add('checked-label');
		  }
	
		  // 添加复选框状态改变的事件监听器
		  inputElement.addEventListener('change', function() {
			if (inputElement.checked) {
			  label?.classList.add('checked-label');
			  localStorage.setItem(`checkbox-${id}-checked`, 'true');
			} else {
			  label?.classList.remove('checked-label');
			  localStorage.setItem(`checkbox-${id}-checked`, 'false');
			}
		  });
		});
	  </script> -->