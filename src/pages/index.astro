---
import "../styles/global.css";
import IndexLayout from '../layouts/IndexLayout.astro';
// import Greeting from '../components/Greeting';

const allPosts = await Astro.glob('../pages/posts/*.md');
// // const allFiles = await Astro.glob('../pages/**/*.md');
// // import BlogPost from '../components/BlogPost.astro';

const achieved = await Astro.glob('../pages/posts/03Achieved.md');
const problems = await Astro.glob('../pages/posts/02ProblemsAndAims.md');
// const posts = allFiles.filter(file => file.url.includes('/posts/'));
// const blogs = allFiles.filter(file => file.url.includes('/blogs/'));

// const { frontmatter } = Astro.props;
const pageTitle = "SeanBlog";
// import 'animate.css';
import AOS from 'aos';
import 'aos/dist/aos.css'; // You can also use <link> for styles

---
<!-- <style>
	a {
	  text-decoration: none; /* 取消下划线 */
	}
	Headingsofblog {
		text-decoration: none; /* 取消下划线 */
	}
</style> -->

<IndexLayout pageTitle={pageTitle}>
	<div x-data="{isLoading:false, isFestive:false, isShowDetail:false}" slot="maindiv" class="">
		<h1 class="font-bold text-8lx text-center underline decoration-sky-500 hover:decoration-dotted hover:uppercase">
			This is My awesome blog with <span class="text-yellow-500">Astro&Tailwind.</span></h1>
			<!-- <h2 class="text-center">		
				<Greeting client:load messages={["Hej", "Hallo", "Hola", "Habari"]}/>
			</h2> -->
		<!-- component 庆祝的按钮-->
		<div class=" flex-col min-w-screen flex items-center justify-center">
			<!-- Title -->
			<div class="p-4 rounded-md drop-shadow-2xl flex flex-col space-y-4">
			  <div class="flex items-start space-x-4">

				<div @click="isFestive = !isFestive" class="bg-zinc-100 duration-150 hover:!border-b-2 text-blue-950 rounded-xl drop-shadow-lg group flex items-center border-2 border-b-4 border-blue-950 cursor-pointer active:bg-zinc-300">
				  <div class="py-2 pl-3">
				  <i class="fad fa-party-horn text-xl"></i>
				  </div>
				  <div class="py-2 px-3" x-text="isFestive ? 'Welcome!!' : 'Click to celebrate'">
				  </div>
				</div>
			
			  </div>
			</div>
		</div>
		<!-- 彩穗穗 -->
		<canvas :class="isFestive ? 'opacity-100 translate-y-0 duration-1000' : 'opacity-0 -translate-y-[100%]'" id="my-canvas" class="absolute pointer-events-none"></canvas>



		<section class="bg-transparent h-auto  text-white backdrop:bg-rose-800 flex items-center justify-center">
			<a class="tlt text-3xl text-center w-4/6 items-center justify-center relative after:bg-white after:absolute after:h-1 after:w-0 
			after:bottom-0 after:left-0 hover:text-pink-400 hover:after:w-full after:transition-all after:duration-300 cursor-pointer">
			is:inline解决了大问题啊。Particles、Fireworks、Matter、Anime、pace、Textillate.js打开了新天地啊
			</a>
		</section>

		<!-- Now Working on:模块 -->
		<div class="p-4 flex-wrap mb-10 mt-10 grid grid-cols-1 lg:grid-cols-2 gap-4 auto-cols-max text-base ">
			<div class="p-2 border-spacing-2 outline-dotted outline-offset-2 rounded-md outline-slate-300 w-auto bg-slate-50 dark:bg-transparent dark:text-slate-200 min-h-10">
				<h3 class="mt-1 pl-4 dark:text-slate-200">Now Working on:</h3>
				<div class="overflow-auto 
				[&::-webkit-scrollbar]:w-2
				[&::-webkit-scrollbar-track]:rounded-full
				[&::-webkit-scrollbar-track]:bg-gray-100 
				[&::-webkit-scrollbar-thumb]:rounded-full
				[&::-webkit-scrollbar-thumb]:bg-gray-300
				dark:[&::-webkit-scrollbar-track]:bg-neutral-700
				dark:[&::-webkit-scrollbar-thumb]:bg-neutral-500
				max-h-40">
					{problems.map((post, index) => {
						const headings = post.getHeadings();
						return headings.map((heading, headingIndex) => (
						<div class="flex items-center space-x-2 rounded p-2 hover:bg-gray-100">
							<input type="checkbox" id="{headingIndex+1}" name="{headingIndex+1}" data-id={headingIndex+1} class="h-4 w-4 rounded border-gray-300 text-primary-600 shadow-sm focus:border-primary-300 focus:ring focus:ring-primary-200 focus:ring-opacity-50 focus:ring-offset-0 disabled:cursor-not-allowed disabled:text-gray-400" />
						  	<label for="{headingIndex+1}" class="flex w-full space-x-2 text-sm">{headingIndex+1}. {heading.text}</label>
						</div>
						));
					  })}


				</div>
			</div>
			<!-- What I have Got:模块 -->
			<div class="max-h-60 border-spacing-2 outline-dotted outline-offset-2 rounded-md outline-slate-300 w-auto p-2 bg-slate-50 min-h-10 dark:bg-transparent dark:text-slate-200">
				<h3 class="mt-1 pl-4 space-y-3 dark:text-slate-200">What I have Got:</h3>
				<div class="overflow-auto
				[&::-webkit-scrollbar]:w-2
				[&::-webkit-scrollbar-track]:rounded-full
				[&::-webkit-scrollbar-track]:bg-gray-100
				[&::-webkit-scrollbar-thumb]:rounded-full
				[&::-webkit-scrollbar-thumb]:bg-gray-300
				dark:[&::-webkit-scrollbar-track]:bg-neutral-700
				dark:[&::-webkit-scrollbar-thumb]:bg-neutral-500
				 max-h-40 text-base">
					{achieved.map((post, index) => {
						const headings = post.getHeadings();
						return headings.map((heading, headingIndex) => (
						  <p class="text-sm space-x-2">{headingIndex+1}. {heading.text}</p>
						));
					  })}
				</div>
				
			</div>
		</div>
		<!-- 首页Cards功能模块 -->
		<div class="p-4 flex-wrap grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4 auto-cols-max auto-rows-max dark:bg-transparent dark:text-slate-400">
			{allPosts.map((indexcard,index)=>
				<div 
					data-aos="fade-up" data-aos-offset="200" data-aos-delay={index*600}
					data-aos-duration="1000" 
					class=" min-w-sm border dark:border-sky-800 rounded-lg p-4 min-h-60 bg-gradient-to-t from-sky-50 to-sky-0 dark:from-sky-950 dark:to-sky-900 shadow-sm ">
				<h4 class="mt-1 mb-0 font-bold light text-gray-400 dark:text-slate-200">Blog No.{index + 1}</h4>
				<h2 class="nav-links mt-1 text-2xl font-bold hover:text-blue-900 ">
					<a href={indexcard.url}>{indexcard.frontmatter.title}</a>
				</h2>
				<p class="text-sm italic tracking-normal text-pretty indent-8 leading-relaxed dark:text-slate-200">
					{indexcard.frontmatter.description}
				</p>
				</div>)}			
		</div>

		
		<div class="h-2 rounded-lg bg-gradient-to-r from-indigo-500 via-purple-500 to-pink-500 ..."></div>

			<!-- 尝试新卡片组件 -->
			<!-- <div class="grid grid-flow-row auto-rows-max">
				{allPosts.map((indexcard)=> <div class="bg-white border rounded-xl shadow-sm sm:flex mt-6 p-4 dark:bg-neutral-100 dark:border-neutral-700 dark:shadow-neutral-700/70">
					<div class="shrink-0 relative w-full rounded-t-xl overflow-hidden sm:rounded-s-xl sm:max-w-60 md:rounded-se-none md:max-w-xs">
					<img class="size-3/4 absolute items-center ml-6 rounded-lg top-0 start-0 object-cover" 
					src="https://images.unsplash.com/photo-1680868543815-b8666dba60f7?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=560&q=80" alt="Card Image">
					</div>
					
					<div class="flex flex-wrap">
						<div class="p-4 flex flex-col h-auto sm:p-4">
							<h3 class="text-lg font-bold text-gray-800 dark:text-white">
								<a href={indexcard.url}>{indexcard.frontmatter.title}</a>
							</h3>
							<p class="mt-1 text-gray-500 dark:text-neutral-400">
								{indexcard.frontmatter.description}
							</p>
							<div class="mt-5 sm:mt-auto">
							<p class="text-xs text-gray-500 dark:text-neutral-500">
								{indexcard.frontmatter.pubDate}
							</p>
							</div>
						</div>
					</div>
				</div> )}
				
			</div> -->
			<!-- component 彩色换页 -->
			<!-- <div class="mt-10 h-2/5 w-full overflow-hidden flex flex-nowrap text-center" id="slider">
				<div class="bg-blue-600 text-white space-y-4 flex-none w-full flex flex-col items-center justify-center">
					<h2 class="text-4xl max-w-md">Your Big Ideia</h2>
					<p class="max-w-md">It's fast, flexible, and reliable — with zero-runtime.</p>
				</div>
				<div class="bg-pink-400 text-white space-y-4 flex-none w-full flex flex-col items-center justify-center">
					<h2 class="text-4xl max-w-md">Tailwind CSS works by scanning all of your HTML</h2>
					<p class="max-w-md">It's fast, flexible, and reliable — with zero-runtime.</p>
				</div>
				<div class="bg-teal-500 text-white space-y-4 flex-none w-full flex flex-col items-center justify-center">
					<h2 class="text-4xl max-w-md">React, Vue, and HTML</h2>
					<p class="max-w-md">Accessible, interactive examples for React and Vue powered by Headless UI, plus vanilla HTML if you’d rather write any necessary JS yourself.</p>
				</div>
			</div> -->
			<!-- 浮动效果div -->
			<div class=" grid grid-cols-1 md:grid-cols-2">
				<div
					data-aos="fade-up" data-aos-offset="50" data-aos-delay="50"
					data-aos-duration="1500" data-aos-easing="linear" data-aos-mirror="true" data-aos-once="false"
					data-aos-anchor-placement="top-right"
					class="md:col-start-2 items-end h-auto w-auto mt-10 p-4 bg-transparent dark:bg-sky-950">
					<h1>data-aos="fade-up"
						data-aos-easing="linear"
						data-aos-offset="100"
						data-aos-delay="50"
						data-aos-duration="2000"
						data-aos-mirror="true"
						data-aos-once="false"
						data-aos-anchor-placement="top-center"</h1>
				</div>
				<div
					data-aos="fade-up" data-aos-offset="50" data-aos-delay="50"
					data-aos-duration="1500" data-aos-easing="linear" data-aos-mirror="true" data-aos-once="false"
					data-aos-anchor-placement="top-right"
					class="md:col-start-1  items-end h-auto w-full mt-10 p-4 bg-transparent dark:bg-sky-950">
					<h1>data-aos="fade-up"
						data-aos-easing="linear"
						data-aos-offset="100"
						data-aos-delay="50"
						data-aos-duration="2000"
						data-aos-mirror="true"
						data-aos-once="false"
						data-aos-anchor-placement="top-center"</h1>
				</div>
			</div>
			
		  <script is:inline src="https://unpkg.com/aos@next/dist/aos.js"></script>
		  <script is:inline> 
			AOS.init();
		  </script>
		
		</div>

		
</IndexLayout>
<link rel="stylesheet" href="https://unpkg.com/aos@next/dist/aos.css" />


<script is:inline src="https://unpkg.com/aos@next/dist/aos.js"></script>
<script is:inline> 
  AOS.init();
</script>


<!-- Font awesome -->
<link rel="stylesheet" href="https://pro.fontawesome.com/releases/v6.0.0-beta3/css/all.css"
/>
<script src="https://cdn.jsdelivr.net/gh/alpinejs/alpine@v2.8.2/dist/alpine.min.js" defer></script>
<script src="https://cdn.jsdelivr.net/npm/confetti-js@0.0.18/dist/index.min.js"></script>

<!-- <script>
let confettiElement = document.getElementById('my-canvas');
console.log(`canvas`)
console.log(confettiElement,'confettiElement');
let confettiSettings = { target: confettiElement };
let confetti = new ConfettiGenerator(confettiSettings);
confetti.render();
</script> -->
<!-- 放烟花 -->
<script type="module">
	document.addEventListener('DOMContentLoaded', (event) => {
        let confettiElement = document.getElementById('my-canvas');
        console.log('canvas');
        console.log(confettiElement, 'confettiElement');
        if (confettiElement) {
            let confettiSettings = { target: confettiElement };
            let confetti = new ConfettiGenerator(confettiSettings);
            confetti.render();
        } else {
            console.error('Element with ID "my-canvas" not found');
        }
    });
</script>

<!-- 字体动画 -->
<script type="module" src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script type="module" src="https://cdnjs.cloudflare.com/ajax/libs/lettering.js/0.7.0/jquery.lettering.min.js"></script>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/3.7.0/animate.min.css" integrity="sha512-YTL2qFiv2wZNnC764l1DD5zN6lYxDzJ89Ss6zj6YoYIzr6+zwjdVKM1sUR+971X3h7qWCa9cPUBXyYqhOqWWLQ==" crossorigin="anonymous" referrerpolicy="no-referrer" />
<script type="module" src="https://cdn.rawgit.com/jschr/textillate/master/jquery.textillate.js"></script>
    <script type="module">
        $(document).ready(function () {
            $('.tlt').textillate({
            // the default selector to use when detecting multiple texts to animate
            selector: '.texts',
            // enable looping
            loop: true,

            // sets the minimum display time for each text before it is replaced
            minDisplayTime: 1000,

            // sets the initial delay before starting the animation
            // (note that depending on the in effect you may need to manually apply
            // visibility: hidden to the element before running this plugin)
            initialDelay: 0,

            // set whether or not to automatically start animating
            autoStart: true,

            // custom set of 'in' effects. This effects whether or not the
            // character is shown/hidden before or after an animation
            inEffects: [''],

            // custom set of 'out' effects
            outEffects: [ 'hinge' ],

            // in animation settings
            in: {
              // set the effect name
              effect: 'fadeIn',

              // set the delay factor applied to each consecutive character
              delayScale: 1,

              // set the delay between each character
              delay: 50,

              // set to true to animate all the characters at the same time
              sync: false,

              // randomize the character sequence
              // (note that shuffle doesn't make sense with sync = true)
              shuffle: true,

              // reverse the character sequence
              // (note that reverse doesn't make sense with sync = true)
              reverse: false,

              // callback that executes once the animation has finished
              callback: function () {}
            },

            // out animation settings.
            out: {
              effect: 'bounceOut',
              delayScale: 1.5,
              delay: 50,
              sync: false,
              shuffle: true,
              reverse: false,
              callback: function () {}
            },

            // callback that executes once textillate has finished
            callback: function () {},

            // set the type of token to animate (available types: 'char' and 'word')
            type: 'char'
          });
        });
        
    </script>



<!--页面滑动  -->
<!-- 
<script is:inline>
	document.addEventListener('DOMContentLoaded', () => {
		const slider = document.querySelector('#slider');
		setTimeout(function moveSlide() {
			const max = slider.scrollWidth - slider.clientWidth;
			const left = slider.clientWidth;
  
			if (max === slider.scrollLeft) {
				slider.scrollTo({left: 0, behavior: 'smooth'})
			} else {
				slider.scrollBy({left, behavior: 'smooth'})
			}
			setTimeout(moveSlide, 1000)
		}, 1000)
	})
</script> -->

<!-- 勾选未完成事项 -->
<!-- <script>
		// 获取所有复选框
		const checkboxes = document.querySelectorAll('input[type="checkbox"]');
	
		// 初始化复选框状态
		checkboxes.forEach(checkbox => {
		  // 明确声明checkbox的类型
		  const inputElement = checkbox as HTMLInputElement;
		  const id = inputElement.getAttribute('data-id');
		  const savedCheckedState = localStorage.getItem(`checkbox-${id}-checked`);
		  const label = document.querySelector(`label[for="${id}"]`);
	
		  if (savedCheckedState === 'true') {
			inputElement.checked = true;
			label?.classList.add('checked-label');
		  }
	
		  // 添加复选框状态改变的事件监听器
		  inputElement.addEventListener('change', function() {
			if (inputElement.checked) {
			  label?.classList.add('checked-label');
			  localStorage.setItem(`checkbox-${id}-checked`, 'true');
			} else {
			  label?.classList.remove('checked-label');
			  localStorage.setItem(`checkbox-${id}-checked`, 'false');
			}
		  });
		});
	  </script> -->