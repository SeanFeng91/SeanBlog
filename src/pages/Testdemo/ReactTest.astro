---
import "../../styles/global.css";
import IndexLayout from '../../layouts/IndexLayout.astro';
// import Footer from '../components/Footer.astro';
// import { SITE_TITLE, SITE_DESCRIPTION } from '../consts';
const title = "QGIS Spatial Analysis Web Demo";
---

<IndexLayout>
	<div slot="maindiv"> 
    <h1>{title}</h1>
    <div class="analysis-controls">
        <button onclick="toggleRoadAnalysis()">道路分析</button>
        <button onclick="toggleBuildingAnalysis()">建筑密度分析</button>
        <div id="analysis-options" style="display: none;">
            <label>分析范围 (米):</label>
            <input type="number" id="searchRadius" value="1000">
            <label>缓冲区 (米):</label>
            <input type="number" id="bufferRadius" value="50">
            <button onclick="runAnalysis()">执行分析</button>
        </div>
        <div id="analysis-info"></div>
    </div>
    <div id="map"></div>
  </div>
</IndexLayout>

<!-- 添加 Leaflet CSS -->
<link rel="stylesheet" href="https://unpkg.com/leaflet@1.7.1/dist/leaflet.css" />

<style>
    #map {
        width: 100%;
        height: 600px;
    }
    .analysis-controls {
        margin: 10px 0;
        padding: 10px;
        background: #f5f5f5;
        border-radius: 4px;
    }
    .analysis-controls input {
        width: 80px;
        margin: 0 10px;
    }
    #analysis-info {
        margin-top: 10px;
        color: #666;
    }
    .analysis-controls button {
        margin: 5px;
        padding: 5px 10px;
        background-color: #4CAF50;
        color: white;
        border: none;
        border-radius: 4px;
        cursor: pointer;
    }
    .analysis-controls button:hover {
        background-color: #45a049;
    }
    #analysis-options {
        margin-top: 10px;
        padding: 10px;
        border: 1px solid #ddd;
        border-radius: 4px;
    }
</style>

<script is:inline src="https://unpkg.com/leaflet@1.7.1/dist/leaflet.js"></script>
<script is:inline src="https://cdn.jsdelivr.net/npm/leaflet-qgis-plugin/dist/leaflet-qgis.min.js"></script>
<script is:inline>
    // 初始化地图
    const map = L.map('map').setView([39.9042, 116.4074], 13); // 默认北京市中心

    // 添加底图
    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
        maxZoom: 19,
    }).addTo(map);

    let currentAnalysisMode = null;
    let analysisLayer = null;
    let searchArea = null;

    // 添加点击获取分析中心点的功能
    let centerMarker = null;
    map.on('click', function(e) {
        if (currentAnalysisMode) {
            if (centerMarker) {
                map.removeLayer(centerMarker);
            }
            centerMarker = L.marker(e.latlng).addTo(map);
            document.getElementById('analysis-info').innerHTML = '已选择分析中心点，点击"执行分析"开始分析';
        }
    });

    function toggleRoadAnalysis() {
        currentAnalysisMode = 'road';
        document.getElementById('analysis-options').style.display = 'block';
        document.getElementById('analysis-info').innerHTML = '请点击地图选择分析中心点';
    }

    function toggleBuildingAnalysis() {
        currentAnalysisMode = 'building';
        document.getElementById('analysis-options').style.display = 'block';
        document.getElementById('analysis-info').innerHTML = '请点击地图选择分析中心点';
    }

    async function runAnalysis() {
        if (!centerMarker) {
            alert('请先点击地图选择分析中心点');
            return;
        }

        // 清除之前的分析图层
        if (analysisLayer) {
            map.removeLayer(analysisLayer);
        }

        const searchRadius = document.getElementById('searchRadius').value;
        const bufferRadius = document.getElementById('bufferRadius').value;
        const center = centerMarker.getLatLng();

        // 构建 Overpass API 查询
        const query = currentAnalysisMode === 'road' 
            ? `[out:json][timeout:25];
               way(around:${searchRadius},${center.lat},${center.lng})["highway"];
               (._;>;);
               out body;`
            : `[out:json][timeout:25];
               way(around:${searchRadius},${center.lat},${center.lng})["building"];
               (._;>;);
               out body;`;

        document.getElementById('analysis-info').innerHTML = '正在获取数据...';

        try {
            const response = await fetch('https://overpass-api.de/api/interpreter', {
                method: 'POST',
                body: query
            });
            const data = await response.json();

            if (currentAnalysisMode === 'road') {
                // 道路分析
                const roads = osmtogeojson(data);
                analysisLayer = L.geoJSON(roads, {
                    style: {
                        color: '#ff7800',
                        weight: 2
                    }
                }).addTo(map);

                // 添加缓冲区
                roads.features.forEach(feature => {
                    const buffer = turf.buffer(feature, bufferRadius/1000, {units: 'kilometers'});
                    L.geoJSON(buffer, {
                        style: {
                            color: '#ff7800',
                            fillColor: '#ff7800',
                            fillOpacity: 0.2
                        }
                    }).addTo(map);
                });

                document.getElementById('analysis-info').innerHTML = 
                    `分析完成：找到 ${roads.features.length} 条道路`;

            } else if (currentAnalysisMode === 'building') {
                // 建筑物分析
                const buildings = osmtogeojson(data);
                analysisLayer = L.geoJSON(buildings, {
                    style: {
                        color: '#1e3799',
                        fillColor: '#4a69bd',
                        fillOpacity: 0.6,
                        weight: 1
                    }
                }).addTo(map);

                document.getElementById('analysis-info').innerHTML = 
                    `分析完成：找到 ${buildings.features.length} 栋建筑`;
            }
        } catch (error) {
            document.getElementById('analysis-info').innerHTML = '分析出错：' + error.message;
        }
    }
</script>

<!-- 添加必要的库 -->
<script src="https://unpkg.com/osmtogeojson@3.0.0-beta.4/osmtogeojson.js" is:inline></script>
<script src="https://unpkg.com/@turf/turf@6/turf.min.js" is:inline></script>
