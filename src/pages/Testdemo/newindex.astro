---
// 这是一个 Three.js 测试页面
import "../../styles/global.css";
import IndexLayout from "../../layouts/IndexLayout.astro";

const pageTitle = "Three.js 演示";
---

<IndexLayout pageTitle={pageTitle}>
  <div slot="maindiv" class="container mx-auto px-4 py-8">
    <div class="mb-8">
      <h2 class="text-xl mb-4">方法1: 直接在页面中实现</h2>
      <canvas id="threejs-canvas-1" class="w-full h-[500px]"></canvas>
    </div>

    <div>
      <h2 class="text-xl mb-4">方法2: 通过外部文件实现</h2>
      <canvas id="threejs-canvas-2" class="w-full h-[500px]"></canvas>
    </div>
  </div>
</IndexLayout>

<!-- 方法1: 直接在页面中实现 -->
<script>
  function initThreeJS() {
    import('three').then((THREE) => {
      const scene = new THREE.Scene();
      const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);
      camera.position.z = 5;

      const canvas = document.querySelector('#threejs-canvas-1');
      if (!canvas) return;
      
      const renderer = new THREE.WebGLRenderer({ canvas, antialias: true });
      renderer.setSize(canvas.clientWidth, canvas.clientHeight);

      const geometry = new THREE.BoxGeometry();
      const material = new THREE.MeshBasicMaterial({ color: 0xff0000 }); // 红色立方体
      const cube = new THREE.Mesh(geometry, material);
      scene.add(cube);

      function animate() {
        requestAnimationFrame(animate);
        cube.rotation.x += 0.01;
        cube.rotation.y += 0.01;
        renderer.render(scene, camera);
      }

      window.addEventListener('resize', () => {
        camera.aspect = canvas.clientWidth / canvas.clientHeight;
        camera.updateProjectionMatrix();
        renderer.setSize(canvas.clientWidth, canvas.clientHeight);
      });

      animate();
    });
  }

  document.addEventListener('DOMContentLoaded', initThreeJS);
</script>

<!-- 方法2: 通过外部文件实现 -->
<script>
  import { initThreeScene } from '../../components/ThreeJS/three-demo.js';
  document.addEventListener('DOMContentLoaded', () => initThreeScene('threejs-canvas-2'));
</script>
