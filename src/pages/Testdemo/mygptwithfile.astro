---
import "../../styles/global.css";
import IndexLayout from "../../layouts/IndexLayout.astro";
---

<IndexLayout>
  <div slot="maindiv" class="container mx-auto p-4">
    <input type="file" multiple id="fileInput" class="mb-4" />
    <button id="uploadButton" class="bg-blue-500 text-white px-4 py-2 rounded">上传文件</button>
    <div id="fileStatus" class="mt-2 text-sm text-gray-600"></div>
    <div class="mt-4">
      <input type="text" id="questionInput" placeholder="请输入问题..." class="border p-2 w-full" />
    </div>
    <div id="chatBox" class="mt-4 space-y-2"></div>
  </div>
</IndexLayout>

<script>
  let fileMessages = [];
  const chatBox = document.getElementById('chatBox');
  const fileInput = document.getElementById('fileInput');
  const uploadButton = document.getElementById('uploadButton');
  const questionInput = document.getElementById('questionInput');
  const fileStatus = document.getElementById('fileStatus');

  uploadButton.addEventListener('click', handleUpload);
  questionInput.addEventListener('keypress', handleQuestion);

  async function handleUpload() {
    const files = fileInput.files;
    if (files.length === 0) {
      fileStatus.textContent = '请选择至少一个文件上传。';
      return;
    }

    fileStatus.textContent = '正在上传文件...';
    fileMessages = [];

    for (let i = 0; i < files.length; i++) {
      const formData = new FormData();
      formData.append('file', files[i]);
      formData.append('purpose', 'file-extract');

      try {
        const response = await fetch('https://api.moonshot.cn/v1/files', {
          method: 'POST',
          headers: {
            'Authorization': 'Bearer sk-0p3lt39xxkRhMtI8jQelXtzsdBzq7viGUfIR8MKQCx71mx4v',
          },
          body: formData,
        });

        if (!response.ok) {
          throw new Error(`HTTP error! status: ${response.status}`);
        }

        const data = await response.json();
        
        if (!data.id) {
          throw new Error('上传失败：服务器返回的数据格式不正确');
        }

        const contentResponse = await fetch(`https://api.moonshot.cn/v1/files/${data.id}/content`, {
          headers: {
            'Authorization': 'Bearer sk-0p3lt39xxkRhMtI8jQelXtzsdBzq7viGUfIR8MKQCx71mx4v',
          },
        });

        if (!contentResponse.ok) {
          throw new Error(`获取文件内容失败! status: ${contentResponse.status}`);
        }

        const fileContent = await contentResponse.text();
        fileMessages.push({
          role: "system",
          content: `文件 ${files[i].name} 的内容：\n${fileContent}`,
        });

        fileStatus.textContent += `\n文件 ${files[i].name} 上传成功！`;
      } catch (error) {
        console.error('上传文件时出错:', error);
        fileStatus.textContent += `\n文件 ${files[i].name} 上传失败：${error.message}`;
      }
    }

    if (fileMessages.length > 0) {
      fileStatus.textContent += '\n所有文件处理完成。';
    } else {
      fileStatus.textContent += '\n没有成功上传任何文件。';
    }
  }

  async function handleQuestion(event) {
    if (event.key === 'Enter') {
      const question = questionInput.value;
      addMessage('用户', question);
      questionInput.value = '';

      const messages = [
        ...fileMessages,
        {
          role: "system",
          content: "你是 Kimi，由 Moonshot AI 提供的人工智能助手，你更擅长中文和英文的对话。你会为用户提供安全，有帮助，准确的回答。同时，你会拒绝一切涉及恐怖主义，种族歧视，黄色暴力等问题的回答。Moonshot AI 为专有名词，不可翻译成其他语言。",
        },
        {
          role: "user",
          content: question,
        },
      ];

      try {
        const response = await fetch('https://api.moonshot.cn/v1/chat/completions', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
            'Authorization': 'Bearer YOUR_API_KEY_HERE',
          },
          body: JSON.stringify({
            model: 'moonshot-v1-128k',
            messages: messages,
          }),
        });

        if (!response.ok) {
          throw new Error(`HTTP error! status: ${response.status}`);
        }

        const data = await response.json();
        
        if (data.choices && data.choices.length > 0 && data.choices[0].message) {
          const answer = data.choices[0].message.content;
          addMessage('助手', answer);
        } else {
          throw new Error('Unexpected response format from the server');
        }
      } catch (error) {
        console.error('获取回答时出错:', error);
        addMessage('系统', `获取回答失败，请重试。错误信息：${error.message}`);
      }
    }
  }

  function addMessage(sender, content) {
    const messageElement = document.createElement('div');
    messageElement.className = `p-2 rounded ${sender === '用户' ? 'bg-blue-100 text-right' : 'bg-gray-100'}`;
    messageElement.textContent = `${sender}: ${content}`;
    chatBox.appendChild(messageElement);
    chatBox.scrollTop = chatBox.scrollHeight;
  }
</script>